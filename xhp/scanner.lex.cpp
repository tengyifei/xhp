#line 2 "scanner.lex.cpp"

#line 4 "scanner.lex.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */
/* %ok-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 35
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
/* %endif */

/* %if-c-only */
    
/* %endif */

/* %if-c-only */

/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* %endif */

/* %if-c++-only */
/* %endif */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* %not-for-header */

/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
/* %ok-for-header */

/* %if-reentrant */

/* An opaque pointer. */
#ifndef YY_TYPEDEF_YY_SCANNER_T
#define YY_TYPEDEF_YY_SCANNER_T
typedef void* yyscan_t;
#endif

/* For convenience, these vars (plus the bison vars far below)
   are macros in the reentrant scanner. */
#define yyin yyg->yyin_r
#define yyout yyg->yyout_r
#define yyextra yyg->yyextra_r
#define yyleng yyg->yyleng_r
#define yytext yyg->yytext_r
#define yylineno (YY_CURRENT_BUFFER_LVALUE->yy_bs_lineno)
#define yycolumn (YY_CURRENT_BUFFER_LVALUE->yy_bs_column)
#define yy_flex_debug yyg->yy_flex_debug_r

/* %endif */

/* %if-not-reentrant */
/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yyg->yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yyg->yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE xhprestart(yyin ,yyscanner )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

/* %if-not-reentrant */
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = yyg->yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yyg->yy_c_buf_p = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yyg->yytext_ptr , yyscanner )

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
	FILE *yy_input_file;
/* %endif */

/* %if-c++-only */
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via xhprestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( yyg->yy_buffer_stack \
                          ? yyg->yy_buffer_stack[yyg->yy_buffer_stack_top] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE yyg->yy_buffer_stack[yyg->yy_buffer_stack_top]

/* %if-c-only Standard (non-C++) definition */

/* %if-not-reentrant */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

void xhprestart (FILE *input_file ,yyscan_t yyscanner );
void xhp_switch_to_buffer (YY_BUFFER_STATE new_buffer ,yyscan_t yyscanner );
YY_BUFFER_STATE xhp_create_buffer (FILE *file,int size ,yyscan_t yyscanner );
void xhp_delete_buffer (YY_BUFFER_STATE b ,yyscan_t yyscanner );
void xhp_flush_buffer (YY_BUFFER_STATE b ,yyscan_t yyscanner );
void xhppush_buffer_state (YY_BUFFER_STATE new_buffer ,yyscan_t yyscanner );
void xhppop_buffer_state (yyscan_t yyscanner );

static void xhpensure_buffer_stack (yyscan_t yyscanner );
static void xhp_load_buffer_state (yyscan_t yyscanner );
static void xhp_init_buffer (YY_BUFFER_STATE b,FILE *file ,yyscan_t yyscanner );

#define YY_FLUSH_BUFFER xhp_flush_buffer(YY_CURRENT_BUFFER ,yyscanner)

YY_BUFFER_STATE xhp_scan_buffer (char *base,yy_size_t size ,yyscan_t yyscanner );
YY_BUFFER_STATE xhp_scan_string (yyconst char *yy_str ,yyscan_t yyscanner );
YY_BUFFER_STATE xhp_scan_bytes (yyconst char *bytes,int len ,yyscan_t yyscanner );

/* %endif */

void *xhpalloc (yy_size_t ,yyscan_t yyscanner );
void *xhprealloc (void *,yy_size_t ,yyscan_t yyscanner );
void xhpfree (void * ,yyscan_t yyscanner );

#define yy_new_buffer xhp_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        xhpensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            xhp_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        xhpensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            xhp_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */

#define xhpwrap(n) 1
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

typedef unsigned char YY_CHAR;

typedef int yy_state_type;

#define yytext_ptr yytext_r

/* %if-c-only Standard (non-C++) definition */

static yy_state_type yy_get_previous_state (yyscan_t yyscanner );
static yy_state_type yy_try_NUL_trans (yy_state_type current_state  ,yyscan_t yyscanner);
static int yy_get_next_buffer (yyscan_t yyscanner );
static void yy_fatal_error (yyconst char msg[] ,yyscan_t yyscanner );

/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yyg->yytext_ptr = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	yyg->yytext_ptr -= yyg->yy_more_len; \
	yyleng = (size_t) (yy_cp - yyg->yytext_ptr); \
	yyg->yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	yyg->yy_c_buf_p = yy_cp;

/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 461
#define YY_END_OF_BUFFER 462
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[1979] =
    {   0,
       19,   19,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  445,  445,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  462,   19,   19,  460,   25,  460,
      460,   22,  460,  460,  460,  460,  460,  460,  460,  460,
      460,  460,  148,  148,  138,  460,  460,  460,  460,  150,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      137,  460,  150,  460,  460,   31,   30,   30,   31,   27,

       26,   26,   29,   31,  460,  460,  156,  157,  157,  160,
      161,  161,  160,  460,  158,  158,  460,  150,  169,  167,
      167,  164,  163,  168,  162,  162,  171,  170,  172,  173,
      174,  440,  436,  437,  443,  442,  442,  442,  440,  436,
      437,  444,  445,  447,  446,  176,  175,  175,  441,  460,
       11,   12,  460,  460,  460,  150,  150,  150,  150,  150,
      150,  150,  150,  150,  460,  459,  458,  457,  457,  457,
      457,  451,  453,   19,   17,   15,   25,  125,    0,  152,
        0,  151,  116,   21,  123,  117,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  113,  132,

      111,  133,  112,  134,    0,  149,  115,   24,   22,  114,
      149,  148,    0,    0,  136,    0,  130,  128,  125,  124,
      135,  129,  131,   20,  150,  150,  150,  150,   61,  150,
        0,    0,    0,  150,  150,  150,  150,  150,  150,   52,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      150,   47,  150,  150,  150,  150,  150,  150,   39,  150,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      150,  150,  119,  150,    0,  153,  118,  122,   31,   30,
       33,   27,   26,   28,   32,    0,    0,  156,  157,  160,
      161,  159,  159,  160,  160,    0,  158,  158,  167,  166,

      165,  168,  162,  171,  172,  173,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  442,  444,  444,  445,  447,  446,    0,  448,  175,
      441,  130,   13,    0,  150,  150,  150,  150,  150,  150,
      150,  150,  150,  457,  457,  457,  457,  451,    0,   18,
       16,    0,  127,    0,  151,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  105,    0,  149,    0,

      149,  148,    0,  154,  120,  126,  121,   20,   20,  150,
       41,  150,  150,    0,  150,  150,  150,  150,  150,  150,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      150,   55,  150,  150,  150,  150,  150,  150,  150,  150,
      150,  150,   44,  150,  150,  150,  150,  150,  150,  150,
      150,  150,   72,  150,   76,   84,  150,   40,  150,  150,
      150,  150,  150,  150,  150,  150,  150,  155,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      449,  441,    0,  150,  150,  150,  150,  150,    2,  150,
      150,    5,  454,  457,  457,  452,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   23,    0,

      154,  150,  150,  150,  150,   64,  150,  150,  150,  150,
      150,  150,  150,  150,  150,   51,   49,  150,  150,  150,
      150,  150,  150,   36,   46,  150,  150,  150,  150,  150,
       68,  150,  150,  150,  150,  150,   93,  150,  150,  150,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      150,  150,  150,  150,  150,  150,  150,  150,  150,  150,
      438,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      297,    0,  298,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,  301,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  299,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  409,  181,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,  408,    0,    0,    0,    0,    0,    0,
      180,    0,    0,    0,    0,    0,  321,    0,    0,    0,
      406,  388,    0,    0,    0,  322,    0,    0,    0,    0,
        0,    0,    0,    0,  398,    0,    0,    0,    0,    0,
        0,    0,  325,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  323,    0,    0,    0,    0,

        0,    0,  450,  441,    0,  150,    1,  150,    9,  150,
      150,  150,  457,  457,  452,    0,    0,    0,    0,    0,
        0,    0,  139,    0,    0,    0,    0,    0,    0,    0,
      150,   94,  150,   66,   73,  150,  150,   89,   45,   70,
      150,  150,  150,  150,   87,  150,  150,   50,  150,  150,
      150,   80,  150,  150,  150,  150,  150,  150,  150,  150,
       86,  150,   42,  150,  150,  150,  150,  150,  150,  150,
       75,  102,   85,   53,  104,  150,  150,  150,  150,  150,
      150,  150,  150,  150,  439,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  307,    0,    0,  230,    0,

        0,    0,    0,  292,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  306,    0,  308,  302,    0,    0,    0,
      304,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  178,  397,  396,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  399,
        0,    0,    0,  332,    0,    0,    0,    0,    0,    0,
        0,  400,    0,    0,    0,    0,  198,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  316,  262,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,  401,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  425,  343,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  194,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  331,  337,    0,
        0,    0,    0,    0,  333,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  196,    0,  326,  344,    0,    0,
        0,    0,    0,    0,  195,    0,  403,    0,    0,  410,
        0,  390,    0,    0,    0,  411,    0,    0,  329,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  190,    0,    0,    0,    0,  187,    0,
        0,  342,    0,  441,    0,    7,  150,    3,    6,  150,
      456,  457,   14,   14,    0,    0,    0,  146,    0,    0,
        0,    0,    0,    0,  140,    0,    0,    0,    0,  150,
      150,  150,  150,  150,  150,  150,   48,  150,   56,  150,
      150,  150,  150,  150,  150,   77,  150,  150,  150,  150,
      150,  150,  150,  150,   83,  150,   71,   78,   62,  150,
      150,  150,  150,  150,  150,  150,  150,  150,    0,    0,
        0,    0,    0,    0,    0,  218,  287,    0,    0,    0,

        0,    0,    0,    0,  225,    0,    0,    0,    0,  294,
      229,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  236,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  242,    0,  282,  291,    0,    0,    0,    0,
        0,    0,    0,  179,    0,    0,    0,  250,    0,  311,
        0,  355,    0,    0,  184,  284,    0,    0,    0,  404,
      191,    0,    0,  379,    0,  373,    0,    0,    0,    0,
        0,    0,    0,  339,  338,    0,    0,  257,  364,    0,
      283,    0,    0,    0,    0,    0,  380,  374,    0,    0,
        0,    0,    0,    0,    0,    0,  318,    0,  386,  261,

        0,  376,    0,  423,    0,  370,    0,    0,    0,    0,
        0,    0,  197,    0,    0,    0,    0,    0,  182,    0,
        0,  412,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  192,  208,    0,    0,    0,  268,  204,  382,    0,
      417,    0,    0,    0,  389,  394,  177,  378,    0,  424,
        0,  372,    0,    0,  367,    0,    0,    0,    0,    0,
      418,  189,    0,    0,    0,    0,  413,  207,  200,  201,
      414,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      377,    0,  371,    0,    0,    0,    0,    0,  274,    0,
        0,  277,  315,  341,  441,    0,  150,    8,  455,    0,

      144,    0,    0,    0,    0,    0,    0,    0,    0,  147,
        0,  150,  150,  150,  150,  150,   59,   65,  150,  150,
      150,  150,   91,   74,   57,  150,  150,   34,  150,  150,
      150,  150,   81,  150,   37,  150,  107,  150,  150,  150,
      150,  150,  150,  150,  220,    0,  216,    0,  286,  219,
        0,    0,    0,  289,    0,  224,    0,    0,  288,    0,
      228,    0,  295,    0,    0,  278,    0,  234,    0,  309,
        0,    0,    0,  359,    0,  303,  244,  293,    0,  241,
        0,    0,    0,    0,  248,  202,  252,    0,    0,  310,
      251,  405,    0,  352,    0,    0,  206,  430,  427,  434,

      375,    0,    0,  313,  429,    0,    0,  256,    0,  384,
        0,  407,  383,    0,    0,    0,    0,  363,  312,    0,
        0,    0,  260,  183,    0,  365,  395,    0,  319,    0,
      193,  419,  350,    0,    0,    0,  347,  346,  203,    0,
      391,  385,  345,  387,    0,    0,  266,  279,    0,  362,
      334,    0,  415,    0,    0,    0,    0,    0,  185,  358,
      393,  209,  420,  351,    0,    0,  348,  349,    0,  328,
        0,    0,    0,    0,  245,    0,  317,    0,    0,  276,
        0,  285,  237,  368,    0,  273,    0,    0,  336,    0,
        0,    0,  441,    0,  150,    0,  143,    0,    0,    0,

      145,    0,  141,    0,    0,   79,  150,  109,  110,   67,
      150,  150,  150,   54,   69,  150,  150,  150,  150,  150,
      150,  150,  150,  150,   99,  150,  150,   98,  150,  150,
      150,  215,  214,  217,  221,  354,  223,  222,    0,  227,
      226,  296,  231,  233,  232,    0,  238,  235,  280,  240,
      239,    0,  243,  247,  246,    0,  249,  188,  253,  186,
      353,  269,  255,  254,    0,  381,  211,  210,  212,  428,
      356,  259,  258,  213,  320,  421,  392,  360,  205,  263,
      265,  264,    0,  270,  267,  416,  357,  199,  422,  361,
      281,  327,    0,    0,  426,  402,    0,  340,    0,  272,

      271,    0,    0,  366,  275,  441,    0,    4,    0,  142,
        0,  108,  150,  150,   63,  150,  150,  150,  103,   90,
      101,   82,  150,   95,  150,  150,  150,  150,  100,  290,
      300,  305,  369,  314,  324,    0,  432,    0,    0,    0,
      330,  441,   10,   60,   58,   92,  150,   43,  150,  150,
      150,   96,  150,    0,  335,    0,  431,  441,  150,  150,
      150,  150,  150,  433,    0,   35,   38,   97,  150,  150,
        0,  150,  106,    0,  150,  435,   88,    0
    } ;

static yyconst flex_int16_t yy_base[2056] =
    {   0,
    22360,22359,    0,    0,  246,  247,  248,  252,  253,  254,
      315,  441,  258,  259,  567,  693,  260,  264,  819,  945,
        0,    0, 1071, 1197,  266,  271, 1323, 1449, 1484, 1486,
     1517, 1522, 1553, 1558,  273,  281,    0,    0, 1718, 1844,
     1970, 2096,22373,22372,22416,    0,  241,22421,  371,22354,
     1485,22421,    0,  231,  247,  343, 1573,22353,  340,  343,
      341,  368, 1573,  460,22355,  240,  245,  248,22350,  441,
     1519,  567,  449,  691,  562,  451,    0,  567,  312,  457,
      304,  551,  330,  564,  449,  571,  335,  448,  555,  565,
    22421,22350,22315,22313, 1456,    0,22421,22398,22360,    0,

    22421,22396,22343,22357,    0,    0,    0,22421,22393,    0,
    22421,22392, 2222,  403,22421,22391,  838,  731,22421,  750,
      762,22355,22341,    0,  783,  887,  892,22421,    0,    0,
    22421, 2314,22421,22421,22421,22421,22421,22388,    0,22421,
    22421,  894, 1574,  379,22421,22421, 1003, 1008,    0,22336,
    22421,22338,  359,  361,  558, 1577, 2240, 1547, 2257, 2260,
     2263, 2238, 2270, 1597,  383,22421,22421,  564,    0,  575,
      586,    0,22350,    0,22333,  700, 1010,22332, 1502,22421,
        0,    0,22421,22421,22421,22421,  845,    0, 2375,  573,
      949,  577,  581,  688,  707,  705,  692,  700,22421,22421,

    22421,22421,22421,22421,22346, 1088,22421,22349,22421,22421,
     1214, 1342, 1123, 2445,22421,  698,  367,22421,22421,22329,
    22421,22421,22328,  423,    0,  815,  838,  826,    0,  825,
     1503,  971,22328,  945,  941,  942, 1207,  948,  960,    0,
      957,  949,  953,  966, 1084, 1077, 1073, 1070, 1075, 1075,
     1071,    0, 1076, 1322, 1075, 1076, 1083, 1186,    0, 1201,
     1209, 1195, 1212, 1205, 1199, 1543, 1199, 1215, 1203, 1214,
     1318, 1332,22421, 1722,22291,22421,22421,22421,    0,22421,
    22421,    0,22421,22421,22421,22352,22346,    0,22421,    0,
    22421,22421,22374, 2547,  424,  528,22421,22373, 1035,22421,

    22421,    0, 1394, 1399,    0,    0, 2150, 1971,22281,  441,
      445, 1599,22284,  817,22283,22282,22261,  427, 2241,  817,
    22273,  698, 1330, 1939,22271,  934,22274, 2065, 1322, 2345,
     1598, 2419,  825, 1328, 1449, 2515,22277, 2367, 1313, 1975,
     2545, 1818,22256, 2262, 2576, 1575, 2225,20612,20607, 1323,
     1420,22421, 1915, 2045, 2587,  755,22421,20666,20648, 2442,
        0,20622,20620, 1446, 1434, 1478, 1527, 1532, 1574, 1570,
     1572, 1586, 1587,    0, 1697, 1713, 1728,    0,20618,22421,
    22421, 1725,22421, 1510,    0, 1512, 1720, 1725, 1726, 1722,
     1729, 1828, 1842, 1853, 1838, 2305,22421, 2475, 2651, 1246,

     2161, 2673, 1864, 1137,22421,22421,22421,22421,20669, 1850,
        0, 1972, 1964,20618, 1984, 1983, 2204, 1981, 2080, 2197,
     2322, 2200, 2224, 2214, 2232, 2255, 2663, 2293, 2292, 2370,
     2382, 2407, 2420, 2425, 2426, 2430, 2433, 2511, 2530, 2532,
     2518, 2534,    0, 2572, 2520, 2537, 2532, 2535, 2539, 2553,
     2572, 2590,    0, 2595,    0,    0, 2589,    0, 2603, 2608,
     2612, 2659, 2622, 2640, 2646, 2669, 2653,22421,20617,20611,
     2735, 2747,20541,20549,20542,20532,20533,20145,20144,20139,
    20131,20119,20113,20114,20108,20143,20089,20082,20072,20070,
    20087,20074,20073,20072,20065,20055,20052,20058,20054,20056,

    20105,19928,19973,19923,19931,19898,19887,  822,19892,19894,
    19889,19866,19911,19864,19863,19856,19869,19862,19875,19836,
    19851,19852,19845,19835,19833,19838,19887,19846,19835,19827,
    19843,  431,19448,19441,  817,19442,  704,19442,19421,19403,
    19418,19413,19408,19378,19375,19384,19379,19389,  314,19384,
    19374,  938, 1595,18915,  185,18724, 1485, 1490,  665,18738,
    18731,18721,  938,18693,18691,18688, 1331, 1600,18699,18692,
    18662,18678,18665,18714,18713,18657,18656, 1609,18531,18524,
    18508,18513,18503, 1436,18482,18480,18491,18486,18456,18453,
     1847,18465,18452,18505,18455, 1323,18453, 1554,18142,18065,

    18036, 1855,18044,18003,17965,17982,17994,17993,17762,17708,
    17719,17761,17558,17551,17547,17540,17522, 1607,17517, 1500,
    17516,17518,17513,17481,17480,17488, 2247,17475,17474, 1853,
    17485,17478,17335, 2420,17347,17334, 1944,17338,17308,17308,
     1946,17303,17318,17303,17288,17265, 2069,17274,17287, 2580,
    17275,17265, 2717, 1039,17284,16504, 1946,16510,16362, 2086,
    16360,16365,16368,16387,16345,16333,16333,16325, 1938,16369,
    22421,    0, 2656, 2683, 2673, 2685, 2700, 2714,    0, 2736,
     2733,    0,    0, 2723, 2743, 2810, 2741, 2759, 2760, 2750,
     2761, 2764, 2822, 2761, 2756, 2760, 2768, 2767, 2842, 2759,

     2320, 2761, 2761, 2787, 2791,    0, 2797, 2799, 2803, 2789,
     2807, 2793, 2805, 2814, 2795,    0, 2808, 2794, 2815, 2806,
     2816, 2800, 2816,    0,    0, 2811, 2814, 2828, 2810, 2830,
        0, 2827, 2812, 2865, 2817, 2816,    0, 2822, 2822, 2842,
     2845, 2851, 2860, 2853, 2863, 2873, 2854, 2858, 2859, 2875,
     2877, 2882, 2866, 2873, 2872, 2875, 2874, 2869, 2877, 2890,
    22421, 2940,16308,16295,16297,16313,16305,16298,16160,16159,
    16169,16165,16179,16133,16119,16175,16116,16092,16108,16099,
    16144,16094,16092,16083,16075,16091,16090,16078,16073,16086,
    22421,16075,22421,16077,15934,15936,15952,15945,15922,15922,

    15910,15909,15957,22421,15880,15929,15928,15872,15876,15902,
    15924,15856,15854,15856,15872,15863,15859,22421,15849,15857,
    15867,15846,15848,15845,15855,15669,15614,15609,15431,15402,
    15399,14949,14953,14953,14953,14926,14915,14934,14932,14921,
    14943,14901,14895,14883,14939,14898,14879,14248,14244,14241,
    14222,14202,14255,14199,14198,14208,14170,14224,14166,14172,
    14175,14162,14164,13465,13176,13006,13005,13011,13010,13029,
    13027,12977,12973,12968,12954,12958, 2068,12945,22421,22421,
    12939,12938,12937,12942,12572,12538,12522,12494,12486,12463,
    12508,12444,12439,12256,12205,12200,12194,12047,12041,12026,

    12028,12010,11996,22421,12001,12014,12051,12024,11969,11964,
    22421,11966,11964,11964,11977,11820,22421,11828,11823,11819,
    22421,22421, 2267,11809,11797,22421,11787,11789,11797,11778,
    11764,11770,11773,11754,22421, 2186,11773, 1539,11761,  698,
     2412,11670,22421,11669,11612,11616,11590, 1839,11638,11580,
    11581,11589,11564,11549,11551,11559,11545,11553,11591,11538,
    11589,11588,11533,11528,11527,11529,11525,11524,11580,11529,
    10825,10762,10642, 2273,10682, 2910,10635,10680,  198,10602,
    10596,10599,10608,10606,10580,10565,10561,10563,10562,10578,
    10560,10475,10428,10424,10430,22421,10387,10443,10393,10403,

    10440,10237,22421,    0, 2885, 2882,    0, 2933,    0, 2916,
     2933, 2926, 2923, 2929, 3011, 3016, 2925, 2933, 3018, 2941,
     2935, 3022,22421, 2952, 2961, 3025, 2957, 2973, 2969, 2983,
     2993,    0, 2995,    0,    0, 2983, 2982,    0,    0,    0,
     2987, 2986, 2993, 3000,    0, 3004, 2990,    0, 3000, 3001,
     3007, 3000, 3010, 3005, 3003, 3003, 3013, 3004, 3018, 3016,
        0, 3009,    0, 3007, 3025, 3028, 3016, 3021, 3049, 3045,
        0,    0,    0,    0,    0, 3037,10247, 3053, 3058, 3042,
     3059, 3057, 3063, 3060,22421,10238,10224,10214,10193,10213,
    10206,10208,10030, 9980, 9931,22421, 9712, 9687,22421, 9665,

     9288, 9268, 9277,22421, 9325, 9260, 9239, 9255, 9235, 9293,
     9266, 9227, 9223, 9222, 9218, 9204, 9220, 8806, 8826, 8808,
     8806, 8794, 8833,22421, 8790,22421,22421, 8779, 8792, 8334,
    22421, 3664, 3643, 3659, 3639, 3648, 3696, 3638, 3694, 3693,
     3635, 3651, 3647, 3644, 3628, 3629, 3646,22421,22421,22421,
     3683, 3636, 3626, 3636, 3674,  436,  490,  565,  705,22421,
      820,  825,  993,22421, 1111, 1192, 1326, 1494, 1606, 1607,
     1596,22421, 1712, 1994, 1964, 2024,22421, 2072, 2055, 2071,
     2069, 2087, 2073, 2075, 2219, 2228, 2184, 2194,22421,22421,
     2272, 2294, 2239, 2301, 2267, 2412, 2287, 2303, 2350, 2406,

     2354, 2398, 2388, 2418, 2417, 2408, 2426, 2430,22421, 2539,
     2500, 2562, 2563, 2532, 2597, 2566, 2608, 2557, 2632, 2586,
     2598, 2601, 2599,22421,22421, 2601, 2640, 2694, 2650, 2644,
     2645, 2642, 2661, 2700, 2656,22421, 2652, 2751, 2857, 2842,
     2864, 2861, 2860, 2915, 2921, 2908, 3019, 3076, 3077, 3022,
     3038, 3038, 3081, 3082, 3083, 3038, 3085,22421,22421, 3036,
     3046, 3046, 3091, 3092,22421, 3094, 3096, 3057, 3100, 3051,
     3104, 3058, 3056, 3109,22421, 3058,22421,22421, 3053, 3060,
     3061, 3062, 3115, 3116,22421, 3079,22421, 3075, 3077,22421,
     3120,22421, 3121, 3122, 3123,22421, 3124, 3082,22421, 3085,

     3090, 3073, 3079, 3090, 3090, 3077, 3092, 3135, 3079, 3137,
     3098, 3080, 3098,22421, 3096, 3142, 3088, 3087,22421, 3146,
     3147,22421, 3148,    0, 3135,    0, 3143,    0,    0, 3139,
        0, 3146,22421, 3202, 3204, 3125, 3206,22421, 3151, 3148,
     3212, 3149, 3135, 3220,22421, 3151, 3155, 3224, 3145, 3159,
     3142, 3146, 3161, 3146, 3163, 3150,    0, 3159, 3168, 3155,
     3192, 3187, 3183, 3201, 3195,    0, 3206, 3207, 3210, 3210,
     3214, 3215, 3212, 3198,    0, 3214,    0,    0,    0, 3201,
     3125, 3129, 3201, 3191, 3192, 3209, 3206, 3206, 3232, 3191,
     3234, 3193, 3236, 3237, 3196,22421,22421, 3190, 3185, 3242,

     3202, 3259, 3218, 3212,22421, 3265, 3224, 3267, 3226,22421,
    22421, 3269, 3232, 3229, 3272, 3231, 3274, 3233, 3276, 3225,
     3233, 3237,22421, 3280, 3230, 3282, 3283, 3284, 3243, 3286,
     3245, 3236,22421, 3247,22421,22421, 3248, 3291, 3292, 3293,
     3252, 3233, 3296,22421, 3297, 3298, 3257,22421, 3300,22421,
     3246,22421, 3253, 3303,22421,22421, 3304, 3305, 3306,22421,
    22421, 3307, 3257,22421, 3254,22421, 3310, 3311, 3270, 3271,
     3314, 3273, 3316,22421,22421, 3265, 3318,22421,22421, 3319,
    22421, 3271, 3330, 3329, 3324, 3325,22421,22421, 3270, 3274,
     3286, 3329, 3330, 3289, 3332, 3333,22421, 3277,22421,22421,

     3335,22421, 3298,22421, 3337,22421, 3338, 3339, 3285, 3284,
     3290, 3343,22421, 3344, 3345, 3289, 3347, 3348,22421, 3349,
     3350,22421, 3309, 3310, 3353, 3354, 3313, 3356, 3357, 3306,
     3359,22421,22421, 3315, 3319, 3306,22421,22421,22421, 3314,
    22421, 3313, 3365, 3366,22421,22421,22421,22421, 3367,22421,
     3368,22421, 3369, 3370,22421, 3316, 3320, 3373, 3374, 3324,
    22421,22421, 3376, 3328, 3340, 3323,22421,22421,22421,22421,
    22421, 3380, 3388, 3382, 3330, 3384, 3343, 3386, 3387, 3388,
    22421, 3347,22421, 3390, 3349, 3343, 3393, 3342,22421, 3342,
     3354,22421,22421,22421,    0, 3374, 3381,    0,    0, 3449,

    22421, 3450, 3382, 3452, 3380, 3454, 3455, 3397, 3467,22421,
     3384, 3385, 3386, 3382, 3394, 3404,    0,    0, 3409, 3410,
     3410, 3410,    0,    0,    0, 3402, 3405, 3370, 3416, 3431,
     3446, 3447,    0, 3447, 3372, 3423,    0, 3424, 3447, 3454,
     3427, 3455, 3444, 3430,22421, 3467,22421, 3468,22421,22421,
     3469, 3470, 3471,22421, 3472,22421, 3473, 3423,22421, 3475,
    22421, 3476,22421, 3477, 3478,22421, 3479,22421, 3480,22421,
     3430, 3482, 3484,22421, 3485,22421,22421,22421, 3488,22421,
     3490, 3440, 3492, 3495,22421,22421,22421, 3498, 3449,22421,
    22421,22421, 3500,22421, 3501, 3502,22421,22421,22421,22421,

    22421, 3503, 3504,22421,22421, 3505, 3506,22421, 3507,22421,
     3457,22421,22421, 3509, 3510, 3511, 3512,22421,22421, 3513,
     3514, 3515,22421,22421, 3516,22421,22421, 3517,22421, 3518,
    22421,22421,22421, 3519, 3520, 3521,22421,22421,22421, 3522,
    22421,22421,22421,22421, 3523, 3524,22421,22421, 3525,22421,
    22421, 3475,22421, 3527, 3528, 3529, 3530, 3531,22421,22421,
    22421,22421,22421,22421, 3532, 3533,22421,22421, 3534,22421,
     3535, 3498, 3486, 3538,22421, 3539,22421, 3478, 3541,22421,
     3487,22421,22421,22421, 3543,22421, 3544, 3496,22421, 3495,
     3547, 3548,    0, 3539, 3540, 3601,22421, 3602, 3603, 3604,

    22421, 3605,22421, 3606, 3607,    0, 3549,    0,    0,    0,
     3537, 3554, 3550,    0,    0, 3539, 3545, 3546, 3556, 3558,
     3559, 3561, 3551, 3536,    0, 3553, 3569,    0, 3554, 3587,
     3568,22421,22421,22421,22421,22421,22421,22421, 3606,22421,
    22421,22421,22421,22421,22421, 3607,22421,22421,22421,22421,
    22421, 3608,22421,22421,22421, 3609,22421,22421,22421,22421,
    22421,22421,22421,22421, 3611,22421,22421,22421,22421,22421,
    22421,22421,22421,22421,22421,22421,22421,22421,22421,22421,
    22421,22421, 3612,22421,22421,22421,22421,22421,22421,22421,
    22421,22421, 3565, 3614,22421,22421, 3565,22421, 3560,22421,

    22421, 3579, 3618,22421,22421,    0, 3610,    0, 3670,22421,
     3672,    0, 3614, 3614,    0, 3604, 3610, 3619,    0,    0,
        0,    0, 3612,    0, 3613, 3615, 3598, 3627,    0,22421,
    22421,22421,22421,22421,22421, 3594,22421, 3637, 3581, 3639,
    22421,    0,22421,    0,    0,    0, 3632,    0, 3633, 3606,
     3623,    0, 3636, 3647,22421, 3596,22421,22421, 3639, 3640,
     3617, 3640, 3619,22421, 3602,    0,    0,    0, 3641, 3630,
     3618, 3659,    0, 3670, 3648,22421,    0,22421, 3762, 4017,
     4272, 4527, 4782, 5037, 5292, 5547, 5802, 6057, 6312, 6567,
     6822, 7077, 7332, 7587, 7842, 8097, 8352, 8607, 8798, 9053,

     9261, 9516, 9771,10026,10217,10408,10616,10871,11126,11381,
    11603,11811,12019,12274,12529,12784,12992,13247,13502,13757,
    14012,14220,14475,14730,14938,15193,15448,15703,15925,16142,
    16350,16605,16860,17115,17323,17531,17786,18041,18296,18504,
    18712,18967,19222,19430,19685,19907,20124,20379,20587,20842,
    21097,21352,21607,21862,22117
    } ;

static yyconst flex_int16_t yy_def[2056] =
    {   0,
     1979, 1979, 1978,    3, 1980, 1980, 1981, 1981, 1980, 1980,
     1982, 1982, 1983, 1983, 1984, 1984, 1985, 1985, 1986, 1986,
       20,   20, 1987, 1987,   24,   24, 1988, 1988, 1989, 1989,
     1990, 1990, 1991, 1991, 1992, 1992, 1993, 1993, 1994, 1994,
     1995, 1995, 1996, 1996, 1978, 1997, 1978, 1978, 1978, 1978,
     1998, 1978, 1999, 1978, 1978, 2000, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     1978, 1978, 2001, 2002, 1978, 2003, 1978, 1978, 1978, 2004,

     1978, 1978, 1978, 1978, 2005, 2006, 2007, 1978, 1978, 2008,
     1978, 1978, 2009, 2010, 1978, 1978, 1978, 2011, 1978, 1978,
     1978, 1978, 1978, 2012, 1978, 1978, 1978, 1978, 2013, 2014,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,  132, 1978,
     1978, 2015, 1978, 1978, 1978, 1978, 1978, 1978, 2016, 1978,
     1978, 1978, 1978, 1978, 1978, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 1978, 1978, 1978, 2017, 2017, 2017,
     2017, 2018, 1978, 2019, 1978, 1978, 1978, 1978, 2020, 1978,
     2021, 2022, 1978, 1978, 1978, 1978, 2023, 2024, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 2025, 2025, 2025, 2025, 2025, 2025,
     2020, 2023, 1978, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 1978, 2025, 2026, 1978, 1978, 1978, 2027, 1978,
     1978, 2028, 1978, 1978, 1978, 2029, 2030, 2031, 1978, 2032,
     1978, 1978, 1978, 2033, 2032, 2034, 1978, 1978, 1978, 1978,

     1978, 2035, 1978, 1978, 2036, 2037, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 2038, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     2039, 1978, 1978, 1978, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2041, 2041, 2041, 2041, 2042, 1978, 1978,
     1978, 1978, 1978, 2043, 2044, 2045, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 2040,
     2040, 2040, 2040, 1978, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 1978, 2046, 2047,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 2048, 1978, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2049, 2049, 2049, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 2050, 1978, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2049, 2049, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 2051, 1978, 2040, 2040, 2040, 2040, 2040,
     2049, 2049, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 2052, 1978, 2040, 2040, 2049, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 2053, 1978, 2040, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 2054, 1978, 2040, 1978, 1978,
     1978, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 2055, 1978, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 1978, 1978, 1978, 1978, 1978, 2040, 2040,
     2040, 2040, 2040, 1978, 1978, 2040, 2040, 2040, 2040, 2040,
     1978, 2040, 2040, 1978, 2040, 1978, 2040,    0, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978
    } ;

static yyconst flex_int16_t yy_nxt[22678] =
    {   0,
       48,   48,   48,   48,   48,   48,   48,   48,   49,   49,
       48,   48,   49,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   49,   50,   51,   52,   53,   54,   55,   56,   57,
       48,   58,   59,   48,   60,   61,   62,   63,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   65,   48,   66,
       67,   68,   69,   48,   70,   71,   72,   73,   74,   75,
       76,   77,   78,   77,   77,   79,   77,   80,   81,   82,
       77,   83,   84,   85,   86,   87,   88,   89,   90,   77,
       48,   91,   48,   92,   93,   94,   70,   71,   72,   73,

       74,   75,   76,   77,   78,   77,   77,   79,   77,   80,
       81,   82,   77,   83,   84,   85,   86,   87,   88,   89,
       90,   77,   48,   95,   48,   48,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,

       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   97,   97,  101,   98,   98,
      102,  101,   97,   97,  102,   98,   98,  108,  108,  115,
      109,  109,  116,  115,  125,  126,  116,  175,  125,  125,
      126,  147,  148,  125,  185,  147,  216,   99,   99,  147,
      148,  183,  184,  147,  104,  104,  853,  125,  854,  217,

      218,  219,  125,  176,  147,  220,  221,  186,  222,  223,
      103, 1300,  147, 1301,  103,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,  105,   48,
       48,   48,   48,  106,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,  177,
      177,  180,  200,  177,  256,  259,  205,  202,  206,  206,
      206,  206,  206,  206,  206,  206,  206,  206,  262,  269,

      201,  207,  177,  203,  204,   48,   48,   48,   48,  208,
       48,  358,  297,  843,  209,  298,  256,  259,  362,  218,
      219,  222,  363,  844,  208,  359,  404,  405,  210,  209,
      262,  269,  408,  292,  188,  409,  293,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,  105,   48,   48,   48,   48,  106,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,

       48,   48,   48,   48,   48,  211,  226,  212,  212,  212,
      212,  212,  212,  212,  212,  212,  212,  239,  227,  270,
      265,  257,  228,  229,  230,  258,  250,  240,  213,  251,
      266,   48,   48,   48,   48,  823,   48,  297,  226,  482,
      298,  484,  502,  503,  483,  485, 1449,  824, 1450,  239,
      227,  270,  265,  257,  228,  229,  230,  258,  250,  240,
      213,  251,  266,   48,   48,   48,   48,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  111,  110,  110,  112,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,

      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  235,  260,  271,  247,  261,  252,  272,  236,  364,
      248,  375,  237,  253,  254,  238,  249,  263,  267,  255,
      264,  376,  377,  268,  387,  390,  391,  110,  110,  110,
      110, 1451,  110,  235,  260,  271,  247,  261,  252,  272,
      236,  364,  248,  375,  237,  253,  254,  238,  249,  263,
      267,  255,  264,  376,  377,  268,  387,  390,  391,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,

      110,  110,  111,  110,  110,  112,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  241,  299,  299,
      381,  860,  299, 1452,  231,  392,  242,  243,  244,  232,
      299,  299,  393,  394,  299,  395,  245,  396,  246,  382,
      403,  299,  861,  110,  110,  110,  110,  358,  110,  241,
      233,  303,  303,  299, 1254,  303,  517,  392,  242,  243,

      244,  359,  518,  830,  393,  394,  831,  395,  245,  396,
      246,  382,  403, 1255,  303,  110,  110,  110,  110,   48,
       48,   48,   48,   48,   48,   48,   48,   49,   49,   48,
       48,   49,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       49,   50,   51,   52,   53,   54,   55,   56,   57,   48,
       58,   59,   48,   60,  117,   62,   63,   64,   64,   64,
       64,   64,   64,   64,   64,   64,   65,   48,   66,   67,
       68,   69,   48,  180,  118,  206,  206,  206,  206,  206,
      206,  206,  206,  206,  206,  303,  303,  410,  207,  303,

      304,  304,  354,  354,  304,  411,  354,  412,  413,   48,
       91,   48,   92,  494,   94,  495,  118,  827,  303,  496,
      512,  513,  798,  304, 1453,  354,  799,  497,  828,  410,
      514,  515, 1454,  498,  570,  571,  188,  411,  572,  412,
      413,   48,   95,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   49,   49,   48,   48,   49,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   49,   50,   51,   52,
       53,   54,   55,   56,   57,   48,   58,   59,   48,   60,
      117,   62,   63,   64,   64,   64,   64,   64,   64,   64,

       64,   64,   65,   48,   66,   67,   68,   69,   48,  180,
      118,  360,  360,  415,  418,  360,  360,  360,  177,  177,
      360,  388,  177,  416,  417,  421,  422,  389,  424,  423,
      528,  425,  426,  427,  360,   48,   91,   48,   92,  360,
       94,  177,  118,  299,  299,  415,  418,  299,  847,  865,
      529, 1455,  866,  388,  848,  416,  417,  421,  422,  389,
      424,  423,  188,  425,  426,  427,  299,   48,   95,   48,
       48,  119,  119,  119,  119,  119,  119,  119,  119,  120,
      121,  119,  119,  120,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,

      119,  119,  120,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  122,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  123,  119,
      119,  119,  119,  119,  119,  206,  206,  206,  206,  206,
      206,  206,  206,  206,  206,  701,  983,  984,  428,  429,
      431,  432,  433,  434,  435,  436,  213,  440,  441,  442,
      430,  119,  119,  119,  119,  400,  119,  400,  701, 1456,
      401,  401,  401,  401,  401,  401,  401,  401,  401,  401,
      428,  429,  431,  432,  433,  434,  435,  436,  213,  440,
      441,  442,  430,  119,  119,  119,  119,  119,  119,  119,

      119,  119,  119,  119,  119,  120,  121,  119,  119,  120,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  120,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  122,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  123,  119,  119,  119,  119,  119,
      119,  399,  399,  399,  399,  399,  399,  399,  399,  399,
      399,  419,  443,  444,  446,  447,  449,  450,  448,  445,
      451,  454,  213,  455,  456,  420,  457,  119,  119,  119,
      119, 1457,  119,  401,  401,  401,  401,  401,  401,  401,

      401,  401,  401,  419,  443,  444,  446,  447,  449,  450,
      448,  445,  451,  454,  213,  455,  456,  420,  457,  119,
      119,  119,  119,   48,   48,   48,   48,   48,   48,   48,
       48,  127,  127,   48,   48,  127,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,  127,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,  128,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,  128,  128,   48,   48,  211,  437,  212,
      212,  212,  212,  212,  212,  212,  212,  212,  212,  458,

      459,  519,  303,  303,  438,  439,  303,  304,  304,  600,
      213,  304,  601,   48,   48,   48,   48,  602,   48,  665,
      437,  543,  544,  666,  573,  303,  520,  870,  574,  603,
      304,  458,  459,  521,  871,  545,  438,  439,  546,  667,
     1458,  906,  213,  575,  907,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,  127,  127,   48,
       48,  127,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
      127,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,  128,   48,   48,   48,   48,

       48,   48,   48,   48,   48,   48,   48,   48,   48,  128,
      128,   48,   48,  576,  673,  674,  277,  131,  180,  131,
      668,  132,  133,  132,  133,  136,  137,  136,  136,  138,
      136,  137,  136,  136,  138,  180,  180,  890,  669,   48,
       48,   48,   48,  180,   48,  577,  673,  674,  136,  578,
      180,  891,  231,  136,  139,  140,  675,  232,  935,  139,
      140,  143,  143,   48,   48,  143,  143,  143,   48,   48,
      143,   48,   48,   48,   48,  134,  181,  134,  233,  278,
     1978,  189,  355,  355,  143, 1978,  355,  856,  675,  143,
      132,  133,  858,  181,  181,  132,  133,  859,  857,  936,

      234,  181,  676,  188,  189,  355, 1978,  452,  141, 1459,
     1978,  367,  144,  141,   48, 1978,  677,  144,  211,   48,
      212,  212,  212,  212,  212,  212,  212,  212,  212,  212,
     1978,  453,  234,  356,  676, 1978, 1978,  190,  191,  452,
      192,  213,  193,  367,  134,  194, 1251, 1252,  677,  134,
      909,  195,  678,  679,  196,  197, 1978,  198,  365,  680,
      214,  373,  556,  453, 1460, 1461,  910,  681,  682,  190,
      191,  652,  192,  213,  193,  145,  136,  194,  653,  654,
      145,  136,  486,  195,  678,  679,  196,  197,  655,  198,
      365,  680,  214,  373,  557,  487,  357,  488,  558,  681,

      682,  489,  559,  849,  850,  883,  851,  932,  872, 1462,
      490,  933,   48,  873,  491,  492,  884,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   49,   49,   48,   48,
       49,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   49,
       50,   51,   52,   53,  150,   55,   56,  151,   48,   58,
       59,   48,   60,  117,   62,   63,   64,   64,   64,   64,
       64,   64,   64,   64,   64,  152,   48,  153,   67,  154,
       48,  155,  156,  157,  158,  683,  159,  160,  460,  461,
      161,  462,  684,  463,  162,  685,  687,  464,  465,  466,

      163,  688,  689,  164,  690,  467,  691,  692,   48,   91,
       48,   92, 1463,   94,  156,  157,  158,  683,  159,  160,
      460,  461,  161,  462,  684,  463,  162,  685,  687,  464,
      465,  466,  163,  688,  689,  164,  690,  467,  691,  692,
       48,   95,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   49,   49,   48,   48,   49,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   49,   50,   51,   52,   53,
      150,   55,   56,  151,   48,   58,   59,   48,   60,  117,
       62,   63,   64,   64,   64,   64,   64,   64,   64,   64,

       64,  152,   48,  153,   67,  154,   48,  155,  156,  157,
      158,  693,  159,  160,  624,  694,  161,  695,  625,  696,
      162,  626,  627,  354,  354,  628,  163,  354,  629,  164,
      700,  630,  631,  702,   48,   91,   48,   92, 1263,   94,
      156,  157,  158,  693,  159,  160,  354,  694,  161,  695,
     1264,  696,  162,  914,  915,  898,  899,  947,  163,  900,
      901,  164,  700,  948,  916,  702,   48,   95,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   49,   49,
       48,   48,   49,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,

       48,   49,   48,   48,   52,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,  165,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,  166,  167,   48,
       48,   48,   48,   48,  168,  522,  703,  523,  170,  473,
      958,  524,  963, 1001,  987,  704,  959, 1002,  705,  171,
      525,  706, 1464,  354,  354,  526,  709,  354,  964,  988,
       48,   48,   48,   48, 1465,   48,  168,  474,  703,  475,
      170,  604,  605,  476,  606,  607,  354,  704,  477,  608,
      705,  171, 1466,  706,  478,  609,  479,  480,  709,  610,
      611,  612,   48,   48,   48,   48,   48,   48,   48,   48,

       48,   48,   48,   48,   49,   49,   48,   48,   49,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   49,   48,   48,
       52,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,  165,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,  166,  167,   48,   48,   48,   48,   48,
      168,  531,  710,  532,  170,  533, 1196,  534, 1467, 1468,
     1469,  970,  535,  536,  537,  171,  538,  971,  539,  540,
      541,  542, 1197,  991, 1470, 1471,   48,   48,   48,   48,
     1472,   48,  168,  992,  710, 1473,  170,  471,  471,  471,

      471,  471,  471,  471,  471,  471,  471,  171,  401,  401,
      401,  401,  401,  401,  401,  401,  401,  401,   48,   48,
       48,   48,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  292,  290,  290,  293,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  472,
      707, 1978,  708,  231,  711,  714, 1978, 1474,  232,  290,
      295,  290,  290,  290,  290,  290, 1475, 1248,  715,  656,
     1978, 1476,  716, 1978, 1249, 1978, 1978, 1978, 1978, 1978,

      717, 1978,  707, 1978,  708,  943,  711,  714, 1978,  504,
      371, 1477,  290,  290,  290,  290, 1978,  290,  366, 1978,
      715,  657, 1978,  658,  716, 1236,  633,  659,  701, 1978,
     1478, 1290,  717,  660,  368,  369,  661,  505,  718,  506,
      370,  662,  371,  507,  290,  290,  290,  290,  307,  508,
      366,  701, 1479,  372, 1480,  509,  510,  511,  634, 1481,
      635,  636,  637,  638,  944,  639,  368,  369,  724,  640,
      718, 1237,  370, 1291, 1482,  725,  641,  697,  308,  309,
      310,  311,  312,  189,  313,  372,  314,  698,  315,  316,
      317,  318,  319,  320, 1485,  321,  322,  323,  324, 1486,

      724,  325,  326,  327,  712,  713,  189,  725, 1487,  697,
      328,  329,  330,  331,  332,  333,  334,  335,  336,  698,
      337,  338,  339,  340,  341,  342,  343,  344,  345,  346,
      347,  590,  348,  349,  350,  351,  712,  713,  726,  190,
      191,  547,  192,  548,  193,  549,  727,  194,  550,  551,
      360,  360,  552,  195,  360,  553,  196,  197,  554,  198,
     1483,  555, 1484,  591, 1488,  592,  593,  594,  595, 1489,
      726,  190,  191,  360,  192,  728,  193,  596,  727,  194,
      597,  598,  599,  699,  699,  195,  729,  699,  196,  197,
      730,  198,  402,  402,  402,  402,  402,  402,  402,  402,

      402,  402, 1490, 1491,  731,  732,  699,  728,  733,  402,
      402,  402,  402,  402,  402,  560, 1492,  561,  729,  952,
     1256,  562,  730, 1257, 1493, 1494, 1495,  563,  564,  953,
      565,  566,  954,  955,  567,  568,  731,  732,  569, 1496,
      733,  402,  402,  402,  402,  402,  402,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  292,  290,  290,  293,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  734,  355,  355, 1497,  735,  355,

      736,  737,  738,  741,  290,  295,  290,  290,  290,  290,
      290,  579,  742,  580, 1498,  581,  743,  582,  355,  744,
     1499, 1500,  745,  583,  584,  585,  734,  586, 1501,  587,
      735,  588,  736,  737,  738,  741,  746,  290,  290,  290,
      290,  613,  290,  614,  742,  615,  356,  616,  743,  739,
      747,  744,  617,  618,  745, 1502,  619,  740,  620,  621,
      622,  623,  748,  749,  750, 1503, 1504, 1505,  746,  290,
      290,  290,  290,  642,  643,  644,  645,  974,  751,  646,
      647,  739,  747,  752,  753,  648,  756,  649,  975,  740,
     1506,  976,  650, 1507,  748,  749,  750,  651,  399,  399,

      399,  399,  399,  399,  399,  399,  399,  399, 1508,  357,
      751, 1509,  757, 1510,  758,  752,  753, 1511,  756,  213,
      402,  402,  402,  402,  402,  402,  402,  402,  402,  402,
      719,  754,  720,  759,  760,  721, 1005,  402,  402,  402,
      402,  402,  402,  755,  757,  722,  758, 1006, 1007,  723,
     1512,  213, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
     1008, 1521,  719,  754,  720,  759,  760,  721, 1005,  402,
      402,  402,  402,  402,  402,  755, 1009,  722, 1010, 1006,
     1007,  723,  471,  471,  471,  471,  471,  471,  471,  471,
      471,  471, 1008,  761,  762,  762,  762,  762,  762,  762,

      762,  762,  762,  762, 1011, 1012, 1013, 1014, 1009, 1522,
     1010,  762,  762,  762,  762,  762,  762,  979, 1015, 1015,
     1016,  980, 1015, 1017, 1018, 1019, 1020,  981, 1021, 1025,
     1022, 1026, 1027,  982, 1028, 1029, 1011, 1012, 1013, 1014,
     1030, 1015, 1031,  762,  762,  762,  762,  762,  762, 1032,
      699,  699, 1016, 1022,  699, 1017, 1018, 1019, 1020, 1033,
     1021, 1025, 1023, 1026, 1027, 1034, 1028, 1029, 1035, 1036,
     1037, 1038, 1030,  699, 1031, 1039, 1040, 1041, 1042, 1043,
     1044, 1032, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
     1024, 1033, 1053, 1054, 1055, 1056, 1057, 1034, 1060, 1061,

     1035, 1036, 1037, 1038, 1062, 1063, 1064, 1039, 1040, 1041,
     1042, 1043, 1044, 1065, 1045, 1046, 1047, 1048, 1049, 1050,
     1051, 1052, 1024, 1066, 1053, 1054, 1055, 1056, 1057, 1058,
     1060, 1061, 1067, 1059, 1068, 1069, 1062, 1063, 1064, 1070,
     1071, 1072, 1073, 1074, 1075, 1065, 1076, 1077, 1078, 1079,
     1080, 1081, 1082, 1083, 1084, 1066, 1523, 1524, 1293, 1294,
     1295, 1058, 1525, 1526, 1067, 1059, 1068, 1069, 1296, 1325,
     1326, 1070, 1071, 1072, 1073, 1074, 1075, 1527, 1076, 1077,
     1078, 1079, 1080, 1081, 1082, 1083, 1084,  762,  762,  762,
      762,  762,  762,  762,  762,  762,  762, 1327, 1085, 1328,

     1329, 1325, 1326, 1330,  762,  762,  762,  762,  762,  762,
     1297, 1331, 1332, 1335, 1336, 1528, 1340, 1529, 1341, 1015,
     1015, 1530, 1342, 1015, 1333, 1333, 1337, 1343, 1334, 1327,
     1022, 1328, 1329, 1344, 1346, 1330,  762,  762,  762,  762,
      762,  762, 1015, 1331, 1332, 1335, 1336, 1333, 1340, 1337,
     1341, 1347, 1348, 1022, 1342, 1349, 1344, 1350, 1338, 1343,
     1351, 1352, 1023, 1353, 1354, 1345, 1346, 1355, 1356, 1357,
     1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
     1368, 1369, 1370, 1347, 1348, 1371, 1339, 1349, 1372, 1350,
     1373, 1374, 1351, 1352, 1375, 1353, 1354, 1376, 1377, 1355,

     1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
     1366, 1367, 1368, 1369, 1370, 1378, 1379, 1371, 1339, 1380,
     1372, 1382, 1373, 1374, 1383, 1384, 1375, 1385, 1386, 1376,
     1377, 1387, 1388, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
     1538, 1539, 1540, 1541, 1542, 1543, 1544, 1378, 1379, 1545,
     1546, 1380, 1547, 1382, 1548, 1549, 1383, 1384, 1550, 1385,
     1386, 1551, 1552, 1387, 1388, 1553, 1554, 1555, 1556, 1557,
     1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568,
     1569, 1570, 1571, 1565, 1572, 1573, 1574, 1575, 1576, 1577,
     1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,

     1589, 1590, 1591, 1588, 1592, 1593, 1594, 1596, 1597, 1598,
     1599, 1333, 1600, 1602, 1337, 1603, 1604, 1605, 1606, 1637,
     1344, 1607, 1608, 1638, 1611, 1612, 1613, 1614, 1344, 1615,
     1616, 1617, 1609, 1618, 1619, 1600, 1620, 1337, 1621, 1596,
     1597, 1598, 1599, 1344, 1601, 1602, 1338, 1603, 1604, 1605,
     1606, 1344, 1345, 1607, 1608, 1609, 1611, 1612, 1613, 1614,
     1345, 1615, 1616, 1617, 1610, 1618, 1619, 1622, 1620, 1623,
     1621, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
     1633, 1634, 1635, 1636, 1639, 1640, 1641, 1642, 1643, 1644,
     1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1622,

     1654, 1623, 1655, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
     1631, 1632, 1633, 1634, 1635, 1636, 1639, 1656, 1657, 1642,
     1643, 1644, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
     1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
     1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
     1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
     1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
     1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
     1717, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
     1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,

     1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
     1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
     1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
     1766, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1776,
     1777, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
     1788, 1789, 1790, 1791, 1792, 1794, 1795, 1600, 1796, 1798,
     1344, 1799, 1800, 1802, 1817, 1804, 1823, 1805, 1806, 1807,
     1808, 1809, 1810, 1811, 1812, 1609, 1813, 1771, 1814, 1815,
     1600, 1796, 1816, 1344, 1818, 1800, 1802, 1794, 1795, 1601,
     1797, 1798, 1345, 1799, 1801, 1803, 1778, 1804, 1609, 1805,

     1806, 1807, 1808, 1809, 1810, 1811, 1812, 1610, 1813, 1819,
     1814, 1815, 1820, 1821, 1816, 1822, 1818, 1824, 1825, 1826,
     1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
     1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
     1847, 1819, 1848, 1849, 1820, 1821, 1850, 1822, 1851, 1852,
     1853, 1826, 1827, 1854, 1829, 1830, 1855, 1856, 1857, 1858,
     1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
     1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
     1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
     1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,

     1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1796,
     1337, 1022, 1800, 1802, 1909, 1911, 1911, 1912, 1913, 1911,
     1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
     1924, 1925, 1796, 1337, 1022, 1800, 1802, 1909, 1911, 1907,
     1908, 1797, 1338, 1023, 1801, 1803, 1910, 1926, 1927, 1912,
     1913, 1928, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
     1922, 1923, 1929, 1925, 1930, 1931, 1932, 1933,  224, 1934,
     1935, 1936, 1937, 1938, 1939, 1940, 1941, 1943, 1909, 1926,
     1911, 1911, 1944, 1928, 1911, 1945, 1946, 1947, 1948, 1949,
     1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1960,

     1961, 1909, 1962, 1911, 1963, 1964, 1965, 1966, 1967, 1943,
     1910, 1968, 1969, 1970, 1944, 1971, 1972, 1945, 1946, 1947,
     1948, 1949, 1950, 1951, 1973, 1953, 1974, 1975, 1976, 1977,
     1959, 1960, 1448,  224, 1962, 1447, 1963, 1446, 1445, 1966,
     1967, 1444, 1443, 1442, 1969, 1441, 1440, 1439, 1972, 1438,
     1437, 1436, 1435, 1434, 1433, 1432, 1431, 1430, 1429, 1975,
     1428, 1977,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,

       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,

       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,

       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,

       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,

       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,

      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,

      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,

      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,

      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,

      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,

       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,

       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,

       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,

      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,

      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  114,  114,  114,  114,  114,  114,  114,  114,

      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,

      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,

      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  114,  114,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,

       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,

       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,

       77,   77,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,

      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,

      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  124,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,

      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,

      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,

      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,

      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,

      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,

      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,

      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,

      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,

      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,

      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,

      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,

      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,

      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
      146,  146,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,

      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,

      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,

       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,

       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,

       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,

      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,

      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  172,  172,  172,

      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,

      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,

      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,

      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174, 1427,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,

      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,

      174,  174,  174,  174,  174,  174,  174,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,

      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,

      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182, 1426, 1425,
     1424, 1423,  182, 1422,  182,  182,  182,  182,  182,  182,

      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
     1421, 1420, 1419, 1418,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,

      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225, 1417, 1416,
     1415, 1414, 1413, 1412, 1411,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225, 1410, 1409, 1408, 1407,  225, 1406,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225, 1405, 1404, 1403, 1402,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,

      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,

      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,

      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,

      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  279,  279,  279,  279,  279,  279,  279,  279,  279,
     1401,  279,  279, 1400,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279, 1399,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  282,  282,  282,  282,
      282,  282,  282,  282,  282, 1398,  282,  282, 1397,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282, 1396,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,

      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,

      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,

      286,  286,  286,  286,  286,  286,  286, 1395, 1394, 1393,
     1392,  286, 1391,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286, 1390,
     1389, 1381, 1323,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,

      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287, 1322, 1321,

     1320, 1319,  287, 1318,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
     1317, 1316, 1315, 1314,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,

      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288, 1313, 1312, 1311, 1310, 1309, 1308, 1307,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,

      288,  288,  288,  288,  288,  288, 1306, 1305, 1304, 1303,
      288, 1302,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288, 1299, 1298,
     1292, 1289,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,

      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  290,  290,  290,  290,  290,  290,  290,  290,  290,
     1288,  290,  290, 1287,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,

      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,

      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,

      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,

      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,

      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,

      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,

      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,

      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  225, 1286, 1285, 1284,
     1283,  225, 1282, 1281, 1280, 1279, 1278, 1277, 1276, 1275,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
     1274, 1273,  225, 1272, 1271, 1270, 1269,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225, 1268, 1267, 1266, 1265,  225, 1262,  225,

      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225, 1261, 1260, 1259, 1258,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,

      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302, 1253, 1250,
     1247, 1246, 1245, 1244, 1243,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,

      302, 1242, 1241, 1240, 1239,  302, 1238,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302, 1235, 1234, 1233, 1232,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,

      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305, 1231, 1230, 1229, 1228,
     1227, 1226, 1225,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,

      305,  305,  305,  305,  305,  305,  305,  305,  305, 1224,
     1223, 1222, 1221,  305, 1220,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305, 1219, 1218, 1217, 1216,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,

      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,

      306,  306,  306,  306,  306,  306,  306, 1215,  306,  306,
      306, 1214, 1213,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306, 1212,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,

      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,

      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353, 1211,
     1210,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353, 1209, 1208,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353, 1207,  353,
     1206,  353,  353,  353,  353,  353,  353,  353,  353,  353,

      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
     1205,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353, 1204,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353, 1203,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,

      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,

      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,

      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,

      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374, 1202,
     1201, 1200, 1199, 1198, 1195, 1194,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374, 1193, 1192, 1191, 1190,  374, 1189,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,

      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374, 1188, 1187, 1186, 1185,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,

      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378, 1184,  378,  378,  378,  378,  378,  378,  378,  378,

      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,

      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,

      378,  378,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174, 1183,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,

      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,

      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,

      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,

      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,

      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,

      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,

      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385, 1182, 1181, 1180,
     1179, 1178, 1177, 1176,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,

      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
     1175, 1174, 1173, 1172,  385, 1171,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385, 1170, 1169, 1168, 1167,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,

      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,

      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,

      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225, 1166, 1165, 1164, 1163, 1162,

     1161, 1160,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225, 1159, 1158,
     1157, 1156,  225, 1155,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
     1154, 1153, 1152, 1151,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,

      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  275,  275,  275,  275,  275,  275,  275,

      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,

      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,

      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  279,  279,
      279,  279,  279,  279,  279,  279,  279, 1150,  279,  279,
     1149,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279, 1148,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  282,  282,  282,  282,  282,  282,  282,
      282,  282, 1147,  282,  282, 1146,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282, 1145,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,

      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,

      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  469, 1144,
     1143, 1142, 1141, 1140, 1139, 1138, 1137, 1136, 1135, 1134,
     1133, 1132,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469, 1131, 1130, 1129, 1128, 1127, 1126, 1125,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,

      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469, 1124, 1123, 1122, 1121,  469,
     1120,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469, 1119, 1118, 1117,
     1116,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,

      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      470, 1115, 1114, 1113, 1112, 1111, 1110, 1109, 1108,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470, 1107,

     1106, 1105, 1104, 1103, 1102, 1101,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470, 1100, 1099, 1098, 1097,  470, 1096,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470, 1095, 1094, 1093, 1092,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,

      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  288,  288,  288,

      288,  288,  288,  288,  288,  288,  288, 1091, 1090, 1089,
     1088, 1087, 1086, 1003,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
     1000,  999,  998,  997,  288,  996,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  995,  994,  993,  990,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,

      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  288,  288,  288,

      288,  288,  288,  288,  288,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  989,  290,  290,  986,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,

      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,

      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,

      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,

      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,

      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,

      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,

      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,  296,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      985,  978,  977,  973,  972,  969,  968,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,

      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  967,  966,  965,  962,  302,  961,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  960,  957,  956,  951,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,

      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  950,  949,
      946,  945,  942,  941,  940,  305,  305,  305,  305,  305,

      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  939,  938,  937,  934,  305,  931,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  930,  929,  928,  927,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,

      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,

      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  926,
      306,  306,  306,  925,  924,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  923,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,

      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,

      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  922,  921,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  920,  919,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,

      918,  353,  917,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  913,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  912,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,

      911,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  672,  672,  672,  672,

      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,

      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,

      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  908,  905,  904,  903,  902,  897,  896,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  895,  894,  893,  892,  225,  889,

      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  888,  887,  886,  885,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,

      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  882,
      881,  880,  879,  878,  877,  876,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,

      374,  374,  875,  874,  869,  868,  374,  867,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  864,  863,  862,  855,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,

      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,

      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  852,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,

      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,

      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,

      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,

      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  846,  845,  842,
      841,  840,  839,  838,  385,  385,  385,  385,  385,  385,

      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      837,  836,  835,  834,  385,  833,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  832,  829,  826,  825,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,

      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      469,  822,  821,  820,  819,  818,  817,  816,  815,  814,
      813,  812,  811,  810,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  809,  808,  807,  806,  805,  804,
      803,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  802,  801,  800,

      797,  469,  796,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  795,
      794,  793,  792,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,

      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  470,  791,  790,  789,  788,  787,  786,  785,
      784,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  783,  782,  781,  780,  779,  778,  777,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,

      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  776,  775,  774,  773,  470,  772,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  771,  770,  769,  768,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,

      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,

     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,

     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,

     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  767,  766,  765,  764,  763,  468,
      468,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  404,  408,  686,
      407,  374,  405,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,

      374,  374,  374,  374,  374,  374,  374,  374,  374,  671,
      670,  664,  663,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,

      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,

     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,

     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1324, 1324, 1595, 1595, 1595,

     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,

     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,

     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
     1595, 1595, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,

     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,

     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,

     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,

     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,

     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1906, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,

     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,

     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,

     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,

     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,

     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958,  632,  589,  530,  527,  516,  501,  500,  499,
      493,  481,  297,  292,  468,  468,  276,  414,  407,  406,
      398,  397,  383,  380,  379,  215,  183,  352,  301,  300,

      297,  291,  289,  285,  284,  283,  281,  280,  276,  274,
      273,  224,  215,  199,  178, 1978,  173,  173,   47,   47,
       45, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978
    } ;

static yyconst flex_int16_t yy_chk[22678] =
    {   0,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,

        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,

        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    5,    6,    7,    5,    6,
        7,    8,    9,   10,    8,    9,   10,   13,   14,   17,
       13,   14,   17,   18,   25,   25,   18,   47,   25,   26,
       26,   35,   35,   26,   55,   35,   66,    5,    6,   36,
       36,   54,   54,   36,    9,   10,  555,   25,  555,   66,

       66,   66,   26,   47,   35,   67,   67,   55,   68,   68,
        7,  979,   36,  979,    8,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   49,
       49,   56,   59,   49,   79,   81,   61,   60,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   83,   87,

       59,   61,   49,   60,   60,   11,   11,   11,   11,   62,
       11,  144,  114,  549,   62,  114,   79,   81,  153,  153,
      153,  154,  154,  549,  165,  144,  217,  217,   62,  165,
       83,   87,  224,  295,   56,  224,  295,   11,   11,   11,
       11,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,

       12,   12,   12,   12,   12,   64,   70,   64,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   73,   70,   88,
       85,   80,   70,   70,   70,   80,   76,   73,   64,   76,
       85,   12,   12,   12,   12,  532,   12,  296,   70,  310,
      296,  311,  318,  318,  310,  311, 1156,  532, 1157,   73,
       70,   88,   85,   80,   70,   70,   70,   80,   76,   73,
       64,   76,   85,   12,   12,   12,   12,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,

       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   72,   82,   89,   75,   82,   78,   90,   72,  155,
       75,  168,   72,   78,   78,   72,   75,   84,   86,   78,
       84,  170,  171,   86,  190,  192,  193,   15,   15,   15,
       15, 1158,   15,   72,   82,   89,   75,   82,   78,   90,
       72,  155,   75,  168,   72,   78,   78,   72,   75,   84,
       86,   78,   84,  170,  171,   86,  190,  192,  193,   15,
       15,   15,   15,   16,   16,   16,   16,   16,   16,   16,

       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   74,  120,  120,
      176,  559,  120, 1159,  118,  194,   74,   74,   74,  118,
      121,  121,  195,  196,  121,  197,   74,  198,   74,  176,
      216,  120,  559,   16,   16,   16,   16,  356,   16,   74,
      118,  125,  125,  121,  940,  125,  322,  194,   74,   74,

       74,  356,  322,  537,  195,  196,  537,  197,   74,  198,
       74,  176,  216,  940,  125,   16,   16,   16,   16,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,  187,   19,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  126,  126,  226,  117,  126,

      127,  127,  142,  142,  127,  227,  142,  228,  230,   19,
       19,   19,   19,  314,   19,  314,   19,  535,  126,  314,
      320,  320,  508,  127, 1161,  142,  508,  314,  535,  226,
      320,  320, 1162,  314,  333,  333,  187,  227,  333,  228,
      230,   19,   19,   19,   19,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,

       20,   20,   20,   20,   20,   20,   20,   20,   20,  232,
       20,  147,  147,  234,  236,  147,  148,  148,  177,  177,
      148,  191,  177,  235,  235,  238,  239,  191,  241,  239,
      326,  242,  243,  244,  147,   20,   20,   20,   20,  148,
       20,  177,   20,  299,  299,  234,  236,  299,  552,  563,
      326, 1163,  563,  191,  552,  235,  235,  238,  239,  191,
      241,  239,  232,  242,  243,  244,  299,   20,   20,   20,
       20,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,

       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,  206,  206,  206,  206,  206,
      206,  206,  206,  206,  206,  404,  654,  654,  245,  246,
      247,  248,  249,  250,  251,  253,  206,  255,  256,  257,
      246,   23,   23,   23,   23,  213,   23,  213,  404, 1165,
      213,  213,  213,  213,  213,  213,  213,  213,  213,  213,
      245,  246,  247,  248,  249,  250,  251,  253,  206,  255,
      256,  257,  246,   23,   23,   23,   23,   24,   24,   24,

       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,  211,  211,  211,  211,  211,  211,  211,  211,  211,
      211,  237,  258,  260,  261,  262,  263,  264,  262,  260,
      265,  267,  211,  268,  269,  237,  270,   24,   24,   24,
       24, 1166,   24,  400,  400,  400,  400,  400,  400,  400,

      400,  400,  400,  237,  258,  260,  261,  262,  263,  264,
      262,  260,  265,  267,  211,  268,  269,  237,  270,   24,
       24,   24,   24,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,  212,  254,  212,
      212,  212,  212,  212,  212,  212,  212,  212,  212,  271,

      272,  323,  303,  303,  254,  254,  303,  304,  304,  339,
      212,  304,  339,   27,   27,   27,   27,  339,   27,  350,
      254,  329,  329,  350,  334,  303,  323,  567,  334,  339,
      304,  271,  272,  323,  567,  329,  254,  254,  329,  350,
     1167,  596,  212,  334,  596,   27,   27,   27,   27,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,

       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,  335,  364,  365,   95,   29,   51,   30,
      351,   29,   29,   30,   30,   31,   31,   31,   31,   31,
       32,   32,   32,   32,   32,  179,  231,  584,  351,   28,
       28,   28,   28,  384,   28,  335,  364,  365,   31,  335,
      386,  584,   71,   32,   31,   31,  366,   71,  620,   32,
       32,   33,   33,   33,   33,   33,   34,   34,   34,   34,
       34,   28,   28,   28,   28,   29,   51,   30,   71,   95,
      158,   57,  143,  143,   33,  158,  143,  557,  366,   34,
       33,   33,  558,  179,  231,   34,   34,  558,  557,  620,

       71,  384,  367,  386,   57,  143,  158,  266,   31, 1168,
      156,  158,   33,   32,   33,  156,  368,   34,   63,   34,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
      164,  266,   71,  143,  367,  164,  156,   57,   57,  266,
       57,   63,   57,  158,   33,   57,  938,  938,  368,   34,
      598,   57,  369,  370,   57,   57,  164,   57,  156,  371,
       63,  164,  331,  266, 1169, 1170,  598,  372,  373,   57,
       57,  346,   57,   63,   57,   33,   31,   57,  346,  346,
       34,   32,  312,   57,  369,  370,   57,   57,  346,   57,
      156,  371,   63,  164,  331,  312,  143,  312,  331,  372,

      373,  312,  331,  553,  553,  578,  553,  618,  568, 1171,
      312,  618,   33,  568,  312,  312,  578,   34,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,  375,   39,   39,  274,  274,
       39,  274,  376,  274,   39,  377,  382,  274,  274,  274,

       39,  387,  388,   39,  389,  274,  390,  391,   39,   39,
       39,   39, 1173,   39,   39,   39,   39,  375,   39,   39,
      274,  274,   39,  274,  376,  274,   39,  377,  382,  274,
      274,  274,   39,  387,  388,   39,  389,  274,  390,  391,
       39,   39,   39,   39,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,

       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,  392,   40,   40,  342,  393,   40,  394,  342,  395,
       40,  342,  342,  353,  353,  342,   40,  353,  342,   40,
      403,  342,  342,  410,   40,   40,   40,   40,  948,   40,
       40,   40,   40,  392,   40,   40,  353,  393,   40,  394,
      948,  395,   40,  602,  602,  591,  591,  630,   40,  591,
      591,   40,  403,  630,  602,  410,   40,   40,   40,   40,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,

       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,  324,  412,  324,   41,  308,
      637,  324,  641,  669,  657,  413,  637,  669,  415,   41,
      324,  416, 1174,  354,  354,  324,  418,  354,  641,  657,
       41,   41,   41,   41, 1175,   41,   41,  308,  412,  308,
       41,  340,  340,  308,  340,  340,  354,  413,  308,  340,
      415,   41, 1176,  416,  308,  340,  308,  308,  418,  340,
      340,  340,   41,   41,   41,   41,   42,   42,   42,   42,

       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,  328,  419,  328,   42,  328,  877,  328, 1178, 1179,
     1180,  647,  328,  328,  328,   42,  328,  647,  328,  328,
      328,  328,  877,  660, 1181, 1182,   42,   42,   42,   42,
     1183,   42,   42,  660,  419, 1184,   42,  307,  307,  307,

      307,  307,  307,  307,  307,  307,  307,   42,  401,  401,
      401,  401,  401,  401,  401,  401,  401,  401,   42,   42,
       42,   42,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  307,
      417,  162,  417,  157,  420,  422,  162, 1185,  157,  113,
      113,  113,  113,  113,  113,  113, 1186,  936,  423,  347,
      159, 1187,  424,  160,  936,  159,  161,  162,  160,  157,

      425,  161,  417,  163,  417,  627,  420,  422,  163,  319,
      162, 1188,  113,  113,  113,  113,  159,  113,  157,  160,
      423,  347,  161,  347,  424,  923,  344,  347,  701,  163,
     1191,  974,  425,  347,  159,  160,  347,  319,  426,  319,
      161,  347,  162,  319,  113,  113,  113,  113,  132,  319,
      157,  701, 1192,  163, 1193,  319,  319,  319,  344, 1194,
      344,  344,  344,  344,  627,  344,  159,  160,  428,  344,
      426,  923,  161,  974, 1195,  429,  344,  396,  132,  132,
      132,  132,  132,  189,  132,  163,  132,  396,  132,  132,
      132,  132,  132,  132, 1197,  132,  132,  132,  132, 1198,

      428,  132,  132,  132,  421,  421,  189,  429, 1199,  396,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  396,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  338,  132,  132,  132,  132,  421,  421,  430,  189,
      189,  330,  189,  330,  189,  330,  431,  189,  330,  330,
      360,  360,  330,  189,  360,  330,  189,  189,  330,  189,
     1196,  330, 1196,  338, 1200,  338,  338,  338,  338, 1201,
      430,  189,  189,  360,  189,  432,  189,  338,  431,  189,
      338,  338,  338,  398,  398,  189,  433,  398,  189,  189,
      434,  189,  214,  214,  214,  214,  214,  214,  214,  214,

      214,  214, 1202, 1203,  435,  436,  398,  432,  437,  214,
      214,  214,  214,  214,  214,  332, 1204,  332,  433,  634,
      941,  332,  434,  941, 1205, 1206, 1207,  332,  332,  634,
      332,  332,  634,  634,  332,  332,  435,  436,  332, 1208,
      437,  214,  214,  214,  214,  214,  214,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  438,  355,  355, 1210,  439,  355,

      440,  441,  442,  445,  294,  294,  294,  294,  294,  294,
      294,  336,  446,  336, 1211,  336,  447,  336,  355,  448,
     1212, 1213,  449,  336,  336,  336,  438,  336, 1214,  336,
      439,  336,  440,  441,  442,  445,  450,  294,  294,  294,
      294,  341,  294,  341,  446,  341,  355,  341,  447,  444,
      451,  448,  341,  341,  449, 1215,  341,  444,  341,  341,
      341,  341,  452,  454,  457, 1216, 1217, 1218,  450,  294,
      294,  294,  294,  345,  345,  345,  345,  650,  459,  345,
      345,  444,  451,  460,  461,  345,  463,  345,  650,  444,
     1219,  650,  345, 1220,  452,  454,  457,  345,  399,  399,

      399,  399,  399,  399,  399,  399,  399,  399, 1221,  355,
      459, 1222,  464, 1223,  465,  460,  461, 1226,  463,  399,
      402,  402,  402,  402,  402,  402,  402,  402,  402,  402,
      427,  462,  427,  466,  467,  427,  673,  402,  402,  402,
      402,  402,  402,  462,  464,  427,  465,  674,  675,  427,
     1227,  399, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
      676, 1237,  427,  462,  427,  466,  467,  427,  673,  402,
      402,  402,  402,  402,  402,  462,  677,  427,  678,  674,
      675,  427,  471,  471,  471,  471,  471,  471,  471,  471,
      471,  471,  676,  471,  472,  472,  472,  472,  472,  472,

      472,  472,  472,  472,  680,  681,  684,  685,  677, 1238,
      678,  472,  472,  472,  472,  472,  472,  653,  686,  686,
      687,  653,  686,  688,  689,  690,  691,  653,  692,  694,
      693,  695,  696,  653,  697,  698,  680,  681,  684,  685,
      700,  686,  702,  472,  472,  472,  472,  472,  472,  703,
      699,  699,  687,  693,  699,  688,  689,  690,  691,  704,
      692,  694,  693,  695,  696,  705,  697,  698,  707,  708,
      709,  710,  700,  699,  702,  711,  712,  713,  714,  715,
      717,  703,  718,  719,  720,  721,  722,  723,  726,  727,
      693,  704,  728,  729,  730,  732,  733,  705,  735,  736,

      707,  708,  709,  710,  738,  739,  740,  711,  712,  713,
      714,  715,  717,  741,  718,  719,  720,  721,  722,  723,
      726,  727,  693,  742,  728,  729,  730,  732,  733,  734,
      735,  736,  743,  734,  744,  745,  738,  739,  740,  746,
      747,  748,  749,  750,  751,  741,  752,  753,  754,  755,
      756,  757,  758,  759,  760,  742, 1239, 1240,  976,  976,
      976,  734, 1241, 1242,  743,  734,  744,  745,  976, 1005,
     1006,  746,  747,  748,  749,  750,  751, 1243,  752,  753,
      754,  755,  756,  757,  758,  759,  760,  762,  762,  762,
      762,  762,  762,  762,  762,  762,  762, 1008,  762, 1010,

     1011, 1005, 1006, 1012,  762,  762,  762,  762,  762,  762,
      976, 1013, 1014, 1017, 1018, 1244, 1020, 1245, 1021, 1015,
     1015, 1246, 1024, 1015, 1016, 1016, 1019, 1025, 1016, 1008,
     1022, 1010, 1011, 1026, 1027, 1012,  762,  762,  762,  762,
      762,  762, 1015, 1013, 1014, 1017, 1018, 1016, 1020, 1019,
     1021, 1028, 1029, 1022, 1024, 1030, 1026, 1031, 1019, 1025,
     1033, 1036, 1022, 1037, 1041, 1026, 1027, 1042, 1043, 1044,
     1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
     1057, 1058, 1059, 1028, 1029, 1060, 1019, 1030, 1062, 1031,
     1064, 1065, 1033, 1036, 1066, 1037, 1041, 1067, 1068, 1042,

     1043, 1044, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054,
     1055, 1056, 1057, 1058, 1059, 1069, 1070, 1060, 1019, 1076,
     1062, 1078, 1064, 1065, 1079, 1080, 1066, 1081, 1082, 1067,
     1068, 1083, 1084, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
     1254, 1255, 1256, 1257, 1260, 1261, 1262, 1069, 1070, 1263,
     1264, 1076, 1266, 1078, 1267, 1268, 1079, 1080, 1269, 1081,
     1082, 1270, 1271, 1083, 1084, 1272, 1273, 1274, 1276, 1279,
     1280, 1281, 1282, 1283, 1284, 1286, 1288, 1289, 1291, 1293,
     1294, 1295, 1297, 1288, 1298, 1300, 1301, 1302, 1303, 1304,
     1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315,

     1316, 1317, 1318, 1315, 1320, 1321, 1323, 1325, 1327, 1330,
     1332, 1334, 1335, 1336, 1337, 1339, 1340, 1342, 1343, 1381,
     1341, 1346, 1347, 1382, 1349, 1350, 1351, 1352, 1344, 1353,
     1354, 1355, 1348, 1356, 1358, 1335, 1359, 1337, 1360, 1325,
     1327, 1330, 1332, 1341, 1335, 1336, 1337, 1339, 1340, 1342,
     1343, 1344, 1341, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
     1344, 1353, 1354, 1355, 1348, 1356, 1358, 1361, 1359, 1362,
     1360, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1372,
     1373, 1374, 1376, 1380, 1383, 1384, 1385, 1386, 1387, 1388,
     1389, 1390, 1391, 1392, 1393, 1394, 1395, 1398, 1399, 1361,

     1400, 1362, 1401, 1363, 1364, 1365, 1367, 1368, 1369, 1370,
     1371, 1372, 1373, 1374, 1376, 1380, 1383, 1402, 1403, 1386,
     1387, 1388, 1404, 1406, 1407, 1408, 1409, 1412, 1413, 1414,
     1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425,
     1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438,
     1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1451,
     1453, 1454, 1457, 1458, 1459, 1462, 1463, 1465, 1467, 1468,
     1469, 1470, 1471, 1472, 1473, 1476, 1477, 1480, 1482, 1483,
     1484, 1483, 1485, 1486, 1489, 1490, 1491, 1492, 1493, 1494,
     1495, 1496, 1498, 1501, 1503, 1505, 1507, 1508, 1509, 1510,

     1511, 1512, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1523,
     1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535,
     1536, 1540, 1542, 1543, 1544, 1549, 1551, 1553, 1554, 1556,
     1557, 1558, 1559, 1560, 1563, 1564, 1565, 1566, 1572, 1573,
     1574, 1575, 1576, 1577, 1578, 1579, 1580, 1582, 1584, 1585,
     1586, 1587, 1588, 1590, 1591, 1596, 1597, 1600, 1602, 1603,
     1604, 1605, 1606, 1607, 1628, 1608, 1635, 1611, 1612, 1613,
     1614, 1615, 1616, 1619, 1620, 1609, 1621, 1563, 1622, 1626,
     1600, 1602, 1627, 1604, 1629, 1606, 1607, 1596, 1597, 1600,
     1602, 1603, 1604, 1605, 1606, 1607, 1574, 1608, 1609, 1611,

     1612, 1613, 1614, 1615, 1616, 1619, 1620, 1609, 1621, 1630,
     1622, 1626, 1631, 1632, 1627, 1634, 1629, 1636, 1638, 1639,
     1640, 1641, 1642, 1643, 1644, 1646, 1648, 1651, 1652, 1653,
     1655, 1657, 1658, 1660, 1662, 1664, 1665, 1667, 1669, 1671,
     1672, 1630, 1673, 1675, 1631, 1632, 1679, 1634, 1681, 1682,
     1683, 1639, 1640, 1684, 1642, 1643, 1688, 1689, 1693, 1695,
     1696, 1702, 1703, 1706, 1707, 1709, 1711, 1714, 1715, 1716,
     1717, 1720, 1721, 1722, 1725, 1728, 1730, 1734, 1735, 1736,
     1740, 1745, 1746, 1749, 1752, 1754, 1755, 1756, 1757, 1758,
     1765, 1766, 1769, 1771, 1772, 1773, 1774, 1776, 1778, 1779,

     1781, 1785, 1787, 1788, 1790, 1791, 1792, 1794, 1795, 1796,
     1798, 1799, 1800, 1802, 1804, 1805, 1805, 1807, 1811, 1805,
     1812, 1813, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
     1824, 1826, 1796, 1798, 1799, 1800, 1802, 1804, 1805, 1794,
     1795, 1796, 1798, 1799, 1800, 1802, 1804, 1827, 1829, 1807,
     1811, 1830, 1812, 1813, 1816, 1817, 1818, 1819, 1820, 1821,
     1822, 1823, 1831, 1826, 1839, 1846, 1852, 1856, 1805, 1865,
     1883, 1893, 1894, 1897, 1899, 1902, 1903, 1907, 1909, 1827,
     1911, 1911, 1913, 1830, 1911, 1914, 1916, 1917, 1918, 1923,
     1925, 1926, 1927, 1928, 1936, 1938, 1939, 1940, 1947, 1949,

     1950, 1909, 1951, 1911, 1953, 1954, 1956, 1959, 1960, 1907,
     1909, 1961, 1962, 1963, 1913, 1965, 1969, 1914, 1916, 1917,
     1918, 1923, 1925, 1926, 1970, 1928, 1971, 1972, 1974, 1975,
     1947, 1949, 1155, 1911, 1951, 1154, 1953, 1153, 1152, 1959,
     1960, 1151, 1147, 1146, 1962, 1145, 1144, 1143, 1969, 1142,
     1141, 1140, 1139, 1138, 1137, 1136, 1135, 1134, 1133, 1972,
     1132, 1975, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,

     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,

     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,

     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,

     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,

     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,

     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,

     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,

     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,

     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,

     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,

     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,

     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,

     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,

     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,

     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,

     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,

     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,

     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,

     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,

     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,

     1986, 1986, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,

     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,

     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,

     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,

     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,

     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,

     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,

     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,

     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,

     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,

     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,

     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,

     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,

     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,

     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,

     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,

     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,

     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,

     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,

     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,

     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,

     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,

     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1996, 1996, 1996,

     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,

     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,

     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,

     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1130, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,

     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,

     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,

     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,

     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1129, 1128,
     1125, 1123, 1999, 1122, 1999, 1999, 1999, 1999, 1999, 1999,

     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1121, 1120, 1119, 1118, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,

     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,

     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,

     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,

     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 1117, 1116,
     1115, 1114, 1113, 1112, 1111, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 1110, 1109, 1108, 1107, 2001, 1106, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 1105, 1103, 1102, 1101, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,

     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,

     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,

     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,

     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,
     2002, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     1100, 2003, 2003, 1098, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,

     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 1097, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,

     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,

     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
     2003, 2003, 2003, 2003, 2003, 2003, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 1095, 2004, 2004, 1094, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 1093, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,

     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,

     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,

     2005, 2005, 2005, 2005, 2005, 2005, 2005, 1092, 1091, 1090,
     1089, 2005, 1088, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 1087,
     1086, 1077, 1002, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,

     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 1001, 1000,

      999,  998, 2006,  997, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
      995,  994,  993,  992, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,

     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
     2006, 2006, 2006, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007,  991,  990,  989,  988,  987,  986,  985,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,

     2007, 2007, 2007, 2007, 2007, 2007,  984,  983,  982,  981,
     2007,  980, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,  978,  977,
      975,  973, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,

     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
     2007, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
      972, 2008, 2008,  971, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,

     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,

     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,

     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2008, 2008, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,

     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,

     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
     2009, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,

     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,

     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,

     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2011,  970,  969,  968,
      967, 2011,  966,  965,  964,  963,  962,  961,  960,  959,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
      958,  957, 2011,  956,  955,  954,  953, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011,  952,  951,  950,  949, 2011,  947, 2011,

     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011,  946,  945,  944,  942, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,

     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,  939,  937,
      934,  933,  932,  931,  930, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,

     2012,  929,  928,  927,  925, 2012,  924, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012,  920,  919,  918,  916, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,

     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013,  915,  914,  913,  912,
      910,  909,  908, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,

     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,  907,
      906,  905,  903, 2013,  902, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013,  901,  900,  899,  898, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,

     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
     2013, 2013, 2013, 2013, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,

     2014, 2014, 2014, 2014, 2014, 2014, 2014,  897, 2014, 2014,
     2014,  896,  895, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014,  894, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,

     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,

     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,  893,
      892, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015,  891,  890, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,  889, 2015,
      888, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,

     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
      887, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015,  886, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,  885, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,

     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,

     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,

     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,

     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016,
     2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,  884,
      883,  882,  881,  878,  876,  875, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017,  874,  873,  872,  871, 2017,  870, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,

     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017,  869,  868,  867,  866, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,

     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 2017, 2017, 2017, 2017, 2017, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018,  865, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,

     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,

     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,
     2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,

     2018, 2018, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019,  864, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,

     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,

     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,

     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,

     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,

     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 2020, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,

     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,

     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022,  863,  862,  861,
      860,  859,  858,  857, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,

     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
      856,  855,  854,  853, 2022,  852, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022,  851,  850,  849,  848, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,

     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,
     2022, 2022, 2022, 2022, 2022, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,

     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,

     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,

     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,

     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,

     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025,  847,  846,  845,  844,  843,

      842,  841, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,  840,  839,
      838,  837, 2025,  836, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
      835,  834,  833,  832, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,

     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
     2025, 2025, 2025, 2026, 2026, 2026, 2026, 2026, 2026, 2026,

     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,

     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,

     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
     2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027,  831, 2027, 2027,
      830, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,  829,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,

     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,

     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,
     2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027, 2027,

     2027, 2027, 2027, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028,  828, 2028, 2028,  827, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028,  826, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,

     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,

     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028,
     2028, 2028, 2028, 2028, 2028, 2028, 2028, 2028, 2029,  825,
      824,  823,  822,  821,  820,  819,  817,  816,  815,  814,
      813,  812, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029,  811,  810,  809,  808,  807,  806,  805, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,

     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029,  803,  802,  801,  800, 2029,
      799, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029,  798,  797,  796,
      795, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,

     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,
     2030,  794,  792,  790,  789,  788,  787,  786,  785, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,  784,

      783,  782,  781,  780,  779,  778, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030,  777,  776,  775,  774, 2030,  773, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030,  772,  771,  770,  769, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,

     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030, 2030,
     2030, 2030, 2030, 2030, 2030, 2030, 2030, 2031, 2031, 2031,

     2031, 2031, 2031, 2031, 2031, 2031, 2031,  768,  767,  766,
      765,  764,  763,  670, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
      668,  667,  666,  665, 2031,  664, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031,  663,  662,  661,  659, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,

     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031,

     2031, 2031, 2031, 2031, 2031, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032,  658, 2032, 2032,  656, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,

     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,

     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032, 2032,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,

     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,

     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,

     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033, 2033,
     2033, 2033, 2033, 2033, 2033, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,

     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,

     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034, 2034,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
      655,  652,  651,  649,  648,  646,  645, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,

     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035,  644,  643,  642,  640, 2035,  639, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035,  638,  636,  635,  633, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,

     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,  632,  631,
      629,  628,  626,  625,  624, 2036, 2036, 2036, 2036, 2036,

     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036,  623,  622,  621,  619, 2036,  617, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036,  616,  615,  614,  613, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,

     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036, 2036,
     2036, 2036, 2036, 2036, 2036, 2036, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,

     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,  612,
     2037, 2037, 2037,  611,  610, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037,  609, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,

     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,

     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037, 2037,
     2037, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038,  608,  607, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,  606,  605,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,

      604, 2038,  603, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038,  601, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038,  600, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,

      599, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2039, 2039, 2039, 2039,

     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,

     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,

     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040,  597,  595,  594,  593,  592,  590,  589, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040,  588,  587,  586,  585, 2040,  583,

     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040,  582,  581,  580,  579,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,

     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040,
     2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2040, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,  577,
      576,  575,  574,  573,  572,  571, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,

     2041, 2041,  570,  569,  566,  565, 2041,  564, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041,  562,  561,  560,  556, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,

     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 2041, 2041, 2041, 2041, 2041, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,

     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042,  554, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,

     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,

     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,

     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,

     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043, 2043,
     2043, 2043, 2043, 2043, 2043, 2043, 2043, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044,  551,  550,  548,
      547,  546,  545,  544, 2044, 2044, 2044, 2044, 2044, 2044,

     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
      543,  542,  541,  540, 2044,  539, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044,  538,  536,  534,  533, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,

     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044, 2044,
     2044, 2044, 2044, 2044, 2044, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,

     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,

     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,

     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045, 2045,
     2046,  531,  530,  529,  528,  527,  526,  525,  524,  523,
      522,  521,  520,  519, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046,  518,  517,  516,  515,  514,  513,
      512, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046,  511,  510,  509,

      507, 2046,  506, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,  505,
      504,  503,  502, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,

     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046, 2046,
     2046, 2046, 2047,  501,  500,  499,  498,  497,  496,  495,
      494, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047,  493,  492,  491,  490,  489,  488,  487, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,

     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047,  486,  485,  484,  483, 2047,  482,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047,  481,  480,  479,  478,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,

     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,

     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,

     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,

     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049,  477,  476,  475,  474,  473,  470,
      469, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049,  414,  409,  379,
      363, 2049,  362, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,

     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,  359,
      358,  349,  348, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,

     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,

     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,

     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050, 2050,
     2050, 2050, 2050, 2050, 2050, 2050, 2050, 2051, 2051, 2051,

     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,

     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,

     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051, 2051,
     2051, 2051, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,

     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,

     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,
     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052, 2052,

     2052, 2052, 2052, 2052, 2052, 2052, 2052, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,

     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,

     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,

     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,

     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,

     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,

     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,

     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055, 2055,
     2055, 2055,  343,  337,  327,  325,  321,  317,  316,  315,
      313,  309,  298,  293,  287,  286,  275,  233,  223,  220,
      208,  205,  178,  175,  173,  152,  150,  138,  123,  122,

      116,  112,  109,  104,  103,  102,   99,   98,   94,   93,
       92,   69,   65,   58,   50,   45,   44,   43,    2,    1,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978
    } ;

static yyconst yy_state_type yy_NUL_trans[1978] =
    {   0,
       46,   46,   48,   48,   96,   96,  100,  100,   96,   96,
       48,   48,   48,   48,  110,  110,  114,  114,   48,   48,
       48,   48,  119,  119,  119,  119,   48,   48,  130,  130,
      135,  135,  142,  142,  146,  146,  149,  149,   48,   48,
       48,   48,  172,  172,    0,  174,    0,    0,    0,    0,
      179,    0,    0,    0,    0,  187,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  275,    0,  279,    0,    0,    0,  282,

        0,    0,    0,    0,    0,    0,    0,    0,    0,  290,
        0,    0,  290,  296,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  306,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  353,    0,    0,    0,    0,    0,    0,  361,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  378,    0,  174,    0,    0,    0,    0,  179,    0,
      384,    0,    0,    0,    0,    0,  187,  386,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      179,  187,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  275,    0,    0,    0,  279,    0,
        0,  282,    0,    0,    0,    0,    0,    0,    0,  290,
        0,    0,    0,  290,  290,  296,    0,    0,    0,    0,

        0,    0,    0,    0,    0,  306,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  353,    0,    0,    0,    0,    0,    0,    0,
      672,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  378,    0,    0,
        0,    0,    0,  179,    0,  187,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1004,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0, 1324,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1595,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1793,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1906,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0, 1942,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1958,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0
    } ;

static yyconst flex_int16_t yy_rule_linenum[461] =
    {   0,
      152,  153,  154,  155,  156,  157,  158,  159,  160,  161,
      162,  163,  164,  172,  177,  184,  191,  198,  205,  211,
      215,  227,  231,  236,  240,  243,  247,  248,  252,  255,
      259,  261,  266,  270,  271,  272,  273,  274,  275,  276,
      277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
      287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
      297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
      307,  308,  309,  310,  311,  312,  313,  314,  315,  316,
      317,  318,  319,  320,  321,  322,  323,  324,  325,  326,
      327,  328,  329,  330,  331,  332,  333,  334,  335,  336,

      337,  338,  339,  340,  341,  342,  343,  344,  354,  362,
      374,  375,  376,  377,  378,  379,  380,  381,  382,  383,
      384,  385,  386,  387,  388,  389,  390,  391,  392,  393,
      394,  395,  396,  397,  398,  399,  400,  401,  438,  439,
      440,  441,  442,  443,  444,  445,  446,  451,  452,  453,
      454,  455,  459,  466,  472,  482,  489,  496,  504,  517,
      522,  531,  534,  535,  536,  553,  557,  562,  563,  570,
      571,  572,  576,  577,  584,  590,  600,  601,  602,  603,
      604,  607,  608,  609,  610,  611,  612,  613,  614,  615,
      616,  617,  618,  619,  620,  621,  622,  623,  624,  625,

      626,  627,  628,  629,  630,  631,  632,  633,  634,  635,
      636,  637,  638,  639,  640,  641,  642,  643,  644,  645,
      646,  647,  648,  649,  650,  651,  652,  653,  654,  655,
      656,  657,  658,  659,  660,  661,  662,  663,  664,  665,
      666,  667,  668,  669,  670,  671,  672,  673,  674,  675,
      676,  677,  678,  679,  680,  681,  682,  683,  684,  685,
      686,  687,  688,  689,  690,  691,  692,  693,  694,  695,
      696,  697,  698,  699,  700,  701,  702,  703,  704,  705,
      706,  707,  708,  709,  710,  711,  712,  713,  714,  715,
      716,  717,  718,  719,  720,  721,  722,  723,  724,  725,

      726,  727,  728,  729,  730,  731,  732,  733,  734,  735,
      736,  737,  738,  739,  740,  741,  742,  743,  744,  745,
      746,  747,  748,  749,  750,  751,  752,  753,  754,  755,
      756,  757,  758,  759,  760,  761,  762,  763,  764,  765,
      766,  767,  768,  769,  770,  771,  772,  773,  774,  775,
      776,  777,  778,  779,  780,  781,  782,  783,  784,  785,
      786,  787,  788,  789,  790,  791,  792,  793,  794,  795,
      796,  797,  798,  799,  800,  801,  802,  803,  804,  805,
      806,  807,  808,  809,  810,  811,  812,  813,  814,  815,
      816,  817,  818,  819,  820,  821,  822,  823,  824,  825,

      826,  827,  828,  829,  830,  831,  832,  833,  834,  835,
      836,  837,  838,  839,  840,  841,  842,  843,  844,  845,
      846,  847,  848,  849,  850,  851,  852,  853,  854,  857,
      858,  859,  860,  861,  862,  865,  866,  869,  874,  882,
      889,  904,  918,  925,  938,  944,  948,  952,  956,  962,
      967,  971,  975,  980,  981,  982,  983,  984,  988,  994
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() (yyg->yy_more_flag = 1)
#define YY_MORE_ADJ yyg->yy_more_len
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "scanner.l"
/*
  +----------------------------------------------------------------------+
  | XHP                                                                  |
  +----------------------------------------------------------------------+
  | Copyright (c) 1998-2014 Zend Technologies Ltd. (http://www.zend.com) |
  | Copyright (c) 2009-2014 Facebook, Inc. (http://www.facebook.com)     |
  +----------------------------------------------------------------------+
  | This source file is subject to version 2.00 of the Zend license,     |
  | that is bundled with this package in the file LICENSE.ZEND, and is   |
  | available through the world-wide-web at the following url:           |
  | http://www.zend.com/license/2_00.txt.                                |
  | If you did not receive a copy of the Zend license and are unable to  |
  | obtain it through the world-wide-web, please send a note to          |
  | license@zend.com so we can mail you a copy immediately.              |
  +----------------------------------------------------------------------+
*/
#line 19 "scanner.l"
#include "xhp.hpp"
#include <string.h>

// A PHP file is made of multiple languages, each with its own lexing rules.
// The starting mode or state is the HTML state, then comes the PHP state, 
// and with XHP there is even an XHP state. Certain tokens indicate a 
// transition from one state to another and the macros below are used to 
// manage this state.
#define push_state(s) xhp_new_push_state(s, yyg)
#define pop_state() xhp_new_pop_state(yyg)
#define set_state(s) xhp_set_state(s, yyg)

// This is used to help contextual lexing. For instance 'attribute' is
// considered a XHP keyword after a '{' of a class definition, 
// but a regular identifier in other contexts.
#define last_token() yyextra->last_token

#define YY_USER_ACTION \
  if (yyextra->terminated) \
    return 0; \
  if (!yyg->yy_more_len) \
    yyextra->first_lineno = yyextra->lineno;

#define tok(t) \
  if (yyextra->has_doc_block) { \
    *yylval = yyextra->doc_block + code_rope(yytext, yyextra->first_lineno, yyextra->lineno - yyextra->first_lineno); \
    yyextra->has_doc_block = false; \
  } else { \
    *yylval = code_rope(yytext, yyextra->first_lineno, yyextra->lineno - yyextra->first_lineno); \
  } \
  return yy_token(t, yyg)

#ifdef DEBUG
  static void yy_log_token(int tok);
  #define tokt(t) *yylval = t; push_state(XHP_AFTER_ENT); yy_log_token(T_XHP_TEXT); return yyextra->last_token = T_XHP_TEXT;
#else
  #define tokt(t) *yylval = t; push_state(XHP_AFTER_ENT); return yyextra->last_token = T_XHP_TEXT;
#endif

#define YY_USER_INIT \
  if (yyextra->insert_token) { \
    yyg->yy_init = 0; \
    int ft = yyextra->insert_token; \
    yyextra->insert_token = 0; \
    return yy_token(ft, yyg); \
  }

using namespace std;

const char* yytokname(int tok);
static int yy_token(int tok, struct yyguts_t* yyg);
static void yy_scan_newlines(const char* text, struct yyguts_t* yyg);

static bool utf8ize(uint32_t v, char* buf /* [5] */) {
  if (v <= 0x7f) { // 0xxxxxxx
    buf[0] = v;
    buf[1] = 0;
  } else if (v <= 0x7ff) { // 110yyyxx 10xxxxxx
    buf[0] = 0xc0 | (v >> 6);
    buf[1] = 0x80 | (v & 0x3f);
    buf[2] = 0;
  } else if (v <= 0xffff) { // 1110yyyy 10yyyyxx 10xxxxxx
    buf[0] = 0xe0 | (v >> 12);
    buf[1] = 0x80 | ((v >> 6) & 0x3f);
    buf[2] = 0x80 | (v & 0x3f);
    buf[3] = 0;
  } else if (v <= 0x1fffff) { // 11110zzz 10zzyyyy 10yyyyxx 10xxxxxx
    buf[0] = 0xf0 | (v >> 18);
    buf[1] = 0x80 | ((v >> 12) & 0x3f);
    buf[2] = 0x80 | ((v >> 6) & 0x3f);
    buf[3] = 0x80 | (v & 0x3f);
    buf[4] = 0;
  } else {
    return false;
  }
  return true;
}

/* PHP allows IF or if */
/* I think an interactive scanner is required because of the bison state 
* pushing we do. I'm putting an explicit interactive declaration here in case
* someone tries adding -CF or whatever to the make flags. */
/* The different lexing states. Note that the transitions are done either
* in the lex actions, or in a generic manner in yy_token(). */





















#line 6539 "scanner.lex.cpp"

#define INITIAL 0
#define PHP 1
#define PHP_COMMENT 2
#define PHP_EOL_COMMENT 3
#define PHP_DOC_COMMENT 4
#define PHP_HEREDOC_START 5
#define PHP_HEREDOC_NSTART 6
#define PHP_HEREDOC_NEWLINE 7
#define PHP_HEREDOC_DATA 8
#define PHP_NO_RESERVED_WORDS 9
#define PHP_NO_RESERVED_WORDS_PERSIST 10
#define XHP_LABEL 11
#define XHP_LABEL_WHITESPACE 12
#define XHP_ATTRS 13
#define XHP_ATTR_VAL 14
#define XHP_AFTER_ENT 15
#define XHP_CHILD 16
#define XHP_CHILD_START 17
#define XHP_INVALID_ENTITY 18
#define XHP_ATTR_TYPE_DECL 19
#define XHP_CHILDREN_DECL 20
#define XHP_COMMENT 21

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
#include <unistd.h>
/* %endif */
/* %if-c++-only */
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */

/* Holds the entire state of the reentrant scanner. */
struct yyguts_t
    {

    /* User-defined. Not touched by flex. */
    YY_EXTRA_TYPE yyextra_r;

    /* The rest are the same as the globals declared in the non-reentrant scanner. */
    FILE *yyin_r, *yyout_r;
    size_t yy_buffer_stack_top; /**< index of top of stack. */
    size_t yy_buffer_stack_max; /**< capacity of stack. */
    YY_BUFFER_STATE * yy_buffer_stack; /**< Stack as an array. */
    char yy_hold_char;
    int yy_n_chars;
    int yyleng_r;
    char *yy_c_buf_p;
    int yy_init;
    int yy_start;
    int yy_did_buffer_switch_on_eof;
    int yy_start_stack_ptr;
    int yy_start_stack_depth;
    int *yy_start_stack;
    yy_state_type yy_last_accepting_state;
    char* yy_last_accepting_cpos;

    int yylineno_r;
    int yy_flex_debug_r;

    char *yytext_r;
    int yy_more_flag;
    int yy_more_len;

    YYSTYPE * yylval_r;

    }; /* end struct yyguts_t */

/* %if-c-only */

static int yy_init_globals (yyscan_t yyscanner );

/* %endif */

/* %if-reentrant */

    /* This must go here because YYSTYPE and YYLTYPE are included
     * from bison output in section 1.*/
    #    define yylval yyg->yylval_r
    
int xhplex_init (yyscan_t* scanner);

int xhplex_init_extra (YY_EXTRA_TYPE user_defined,yyscan_t* scanner);

/* %endif */

/* %endif End reentrant structures and macros. */

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int xhplex_destroy (yyscan_t yyscanner );

int xhpget_debug (yyscan_t yyscanner );

void xhpset_debug (int debug_flag ,yyscan_t yyscanner );

YY_EXTRA_TYPE xhpget_extra (yyscan_t yyscanner );

void xhpset_extra (YY_EXTRA_TYPE user_defined ,yyscan_t yyscanner );

FILE *xhpget_in (yyscan_t yyscanner );

void xhpset_in  (FILE * in_str ,yyscan_t yyscanner );

FILE *xhpget_out (yyscan_t yyscanner );

void xhpset_out  (FILE * out_str ,yyscan_t yyscanner );

int xhpget_leng (yyscan_t yyscanner );

char *xhpget_text (yyscan_t yyscanner );

int xhpget_lineno (yyscan_t yyscanner );

void xhpset_lineno (int line_number ,yyscan_t yyscanner );

/* %if-bison-bridge */

YYSTYPE * xhpget_lval (yyscan_t yyscanner );

void xhpset_lval (YYSTYPE * yylval_param ,yyscan_t yyscanner );

/* %endif */

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int xhpwrap (yyscan_t yyscanner );
#else
extern int xhpwrap (yyscan_t yyscanner );
#endif
#endif

/* %not-for-header */

    static void yyunput (int c,char *buf_ptr  ,yyscan_t yyscanner);
    
/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int ,yyscan_t yyscanner);
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * ,yyscan_t yyscanner);
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

#ifdef __cplusplus
static int yyinput (yyscan_t yyscanner );
#else
static int input (yyscan_t yyscanner );
#endif
/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */

    static void yy_push_state (int new_state ,yyscan_t yyscanner);
    
    static void yy_pop_state (yyscan_t yyscanner );
    
    static int yy_top_state (yyscan_t yyscanner );
    
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
/* %endif */
/* %if-c++-only C++ definition */
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		size_t n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(yyin); \
			} \
		}\
\
/* %if-c++-only C++ definition \ */\
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg , yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %ok-for-header */

/* %not-for-header */

/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */

extern int xhplex \
               (YYSTYPE * yylval_param ,yyscan_t yyscanner);

#define YY_DECL int xhplex \
               (YYSTYPE * yylval_param , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only C++ definition */
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

/* %% [7.0] user's declarations go here */
#line 149 "scanner.l"


#line 6872 "scanner.lex.cpp"

    yylval = yylval_param;

	if ( !yyg->yy_init )
		{
		yyg->yy_init = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yyg->yy_start )
			yyg->yy_start = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
			yyin = stdin;
/* %endif */
/* %if-c++-only */
/* %endif */

		if ( ! yyout )
/* %if-c-only */
			yyout = stdout;
/* %endif */
/* %if-c++-only */
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			xhpensure_buffer_stack (yyscanner);
			YY_CURRENT_BUFFER_LVALUE =
				xhp_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
		}

		xhp_load_buffer_state(yyscanner );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		yyg->yy_more_len = 0;
		if ( yyg->yy_more_flag )
			{
			yyg->yy_more_len = yyg->yy_c_buf_p - yyg->yytext_ptr;
			yyg->yy_more_flag = 0;
			}
		yy_cp = yyg->yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yyg->yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = yyg->yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = YY_SC_TO_UI(*yy_cp);
			if ( yy_accept[yy_current_state] )
				{
				yyg->yy_last_accepting_state = yy_current_state;
				yyg->yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 22421 );

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yyg->yy_last_accepting_cpos;
			yy_current_state = yyg->yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				fprintf( stderr, "--scanner backing up\n" );
			else if ( yy_act < 461 )
				fprintf( stderr, "--accepting rule at line %ld (\"%s\")\n",
				         (long)yy_rule_linenum[yy_act], yytext );
			else if ( yy_act == 461 )
				fprintf( stderr, "--accepting default rule (\"%s\")\n",
				         yytext );
			else if ( yy_act == 462 )
				fprintf( stderr, "--(end of buffer or a NUL)\n" );
			else
				fprintf( stderr, "--EOF (start condition %d)\n", YY_START );
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yyg->yy_hold_char;
			yy_cp = yyg->yy_last_accepting_cpos;
			yy_current_state = yyg->yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 152 "scanner.l"
tok(T_XHP_BOOLEAN);
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 153 "scanner.l"
tok(T_XHP_NUMBER);
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 154 "scanner.l"
tok(T_XHP_FLOAT);
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 155 "scanner.l"
tok(T_XHP_CALLABLE);
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 156 "scanner.l"
tok(T_VAR);
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 157 "scanner.l"
tok(T_XHP_MIXED);
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 158 "scanner.l"
tok(T_XHP_ARRAY);
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 159 "scanner.l"
tok(T_XHP_STRING);
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 160 "scanner.l"
tok(T_XHP_ENUM);
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 161 "scanner.l"
tok(T_XHP_REQUIRED);
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 162 "scanner.l"
tok('(');
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 163 "scanner.l"
tok(T_XHP_COLON);
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 164 "scanner.l"
{
    yyless(1);
    tok('>');
  }
	YY_BREAK

/* Open / close PHP + inline HTML */

case 14:
/* rule 14 can match eol */
YY_RULE_SETUP
#line 172 "scanner.l"
{
    yy_scan_newlines(yytext + 5, yyg);
    // the state transition will be done in yy_token()
    tok(T_OPEN_TAG);
  }
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 177 "scanner.l"
{
    if (yyextra->short_tags) {
      tok(T_OPEN_TAG);
    } else {
      tok(T_INLINE_HTML);
    }
  }
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 184 "scanner.l"
{
    if (yyextra->short_tags) {
      tok(T_OPEN_TAG_WITH_ECHO);
    } else {
      tok(T_INLINE_HTML);
    }
  }
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 191 "scanner.l"
{
    if (yyextra->asp_tags) {
      tok(T_OPEN_TAG);
    } else {
      tok(T_INLINE_HTML);
    }
  }
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 198 "scanner.l"
{
    if (yyextra->asp_tags) {
      tok(T_OPEN_TAG_WITH_ECHO);
    } else {
      tok(T_INLINE_HTML);
    }
  }
	YY_BREAK
case 19:
/* rule 19 can match eol */
YY_RULE_SETUP
#line 205 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_INLINE_HTML);
  }
	YY_BREAK


case 20:
/* rule 20 can match eol */
YY_RULE_SETUP
#line 211 "scanner.l"
{
    yy_scan_newlines(yytext + 2, yyg);
    tok(T_CLOSE_TAG);
  }
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 215 "scanner.l"
{
    if (yyextra->asp_tags) {
      tok(T_CLOSE_TAG);
    } else {
      yyless(1);
      tok(yytext[0]);
    }
  }
	YY_BREAK

/* Comments and whitespace */

case 22:
YY_RULE_SETUP
#line 227 "scanner.l"
{
    push_state(PHP_EOL_COMMENT);
    yymore();
  }
	YY_BREAK
case 23:
/* rule 23 can match eol */
YY_RULE_SETUP
#line 231 "scanner.l"
{
    yy_scan_newlines(yytext + 3, yyg);
    push_state(PHP_DOC_COMMENT);
    yymore();
  }
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 236 "scanner.l"
{
    push_state(PHP_COMMENT);
    yymore();
  }
	YY_BREAK
case 25:
/* rule 25 can match eol */
YY_RULE_SETUP
#line 240 "scanner.l"
yy_scan_newlines(yytext, yyg);
	YY_BREAK


case 26:
/* rule 26 can match eol */
YY_RULE_SETUP
#line 243 "scanner.l"
{
    ++yyextra->lineno;
    pop_state();
  }
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 247 "scanner.l"
yymore();
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 248 "scanner.l"
{
    yyless(yyleng - 2);
    pop_state();
  }
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 252 "scanner.l"
yymore();
	YY_BREAK


case 30:
/* rule 30 can match eol */
YY_RULE_SETUP
#line 255 "scanner.l"
{
    ++yyextra->lineno;
    yymore();
  }
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 259 "scanner.l"
yymore();
	YY_BREAK

case 32:
YY_RULE_SETUP
#line 261 "scanner.l"
{
  yyextra->doc_block = code_rope(yytext, yyextra->first_lineno, yyextra->lineno - yyextra->first_lineno);
  yyextra->has_doc_block = true;
  pop_state();
}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 266 "scanner.l"
pop_state();
	YY_BREAK
/* Reserved words */

case 34:
YY_RULE_SETUP
#line 270 "scanner.l"
tok(T_INCLUDE);
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 271 "scanner.l"
tok(T_INCLUDE_ONCE);
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 272 "scanner.l"
tok(T_EVAL);
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 273 "scanner.l"
tok(T_REQUIRE);
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 274 "scanner.l"
tok(T_REQUIRE_ONCE);
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 275 "scanner.l"
tok(T_LOGICAL_OR);
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 276 "scanner.l"
tok(T_LOGICAL_XOR);
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 277 "scanner.l"
tok(T_LOGICAL_AND);
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 278 "scanner.l"
tok(T_PRINT);
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 279 "scanner.l"
tok(T_INSTANCEOF);
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 280 "scanner.l"
tok(T_NEW);
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 281 "scanner.l"
tok(T_CLONE);
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 282 "scanner.l"
tok(T_EXIT);
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 283 "scanner.l"
tok(T_IF);
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 284 "scanner.l"
tok(T_ELSEIF);
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 285 "scanner.l"
tok(T_ELSE);
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 286 "scanner.l"
tok(T_ENDIF);
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 287 "scanner.l"
tok(T_ECHO);
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 288 "scanner.l"
tok(T_DO);
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 289 "scanner.l"
tok(T_WHILE);
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 290 "scanner.l"
tok(T_ENDWHILE);
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 291 "scanner.l"
tok(T_FOR);
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 292 "scanner.l"
tok(T_ENDFOR);
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 293 "scanner.l"
tok(T_FOREACH);
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 294 "scanner.l"
tok(T_ENDFOREACH);
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 295 "scanner.l"
tok(T_DECLARE);
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 296 "scanner.l"
tok(T_ENDDECLARE);
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 297 "scanner.l"
tok(T_AS);
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 298 "scanner.l"
tok(T_SWITCH);
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 299 "scanner.l"
tok(T_ENDSWITCH);
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 300 "scanner.l"
tok(T_CASE);
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 301 "scanner.l"
tok(T_DEFAULT);
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 302 "scanner.l"
tok(T_BREAK);
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 303 "scanner.l"
tok(T_CONTINUE);
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 304 "scanner.l"
tok(T_GOTO);
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 305 "scanner.l"
tok(T_FUNCTION);
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 306 "scanner.l"
tok(T_CONST);
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 307 "scanner.l"
tok(T_RETURN);
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 308 "scanner.l"
tok(T_TRY);
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 309 "scanner.l"
tok(T_CATCH);
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 310 "scanner.l"
tok(T_FINALLY);
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 311 "scanner.l"
tok(T_THROW);
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 312 "scanner.l"
tok(T_USE);
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 313 "scanner.l"
tok(T_GLOBAL);
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 314 "scanner.l"
tok(T_STATIC);
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 315 "scanner.l"
tok(T_ABSTRACT);
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 316 "scanner.l"
tok(T_FINAL);
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 317 "scanner.l"
tok(T_PRIVATE);
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 318 "scanner.l"
tok(T_PROTECTED);
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 319 "scanner.l"
tok(T_PUBLIC);
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 320 "scanner.l"
tok(T_VAR);
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 321 "scanner.l"
tok(T_UNSET);
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 322 "scanner.l"
tok(T_ISSET);
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 323 "scanner.l"
tok(T_EMPTY);
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 324 "scanner.l"
tok(T_HALT_COMPILER);
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 325 "scanner.l"
tok(T_CLASS);
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 326 "scanner.l"
tok(T_INTERFACE);
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 327 "scanner.l"
tok(T_EXTENDS);
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 328 "scanner.l"
tok(T_IMPLEMENTS);
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 329 "scanner.l"
tok(T_LIST);
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 330 "scanner.l"
tok(T_ARRAY);
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 331 "scanner.l"
tok(T_CLASS_C);
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 332 "scanner.l"
tok(T_METHOD_C);
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 333 "scanner.l"
tok(T_FUNC_C);
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 334 "scanner.l"
tok(T_LINE);
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 335 "scanner.l"
tok(T_FILE);
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 336 "scanner.l"
tok(T_TRAIT_C);
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 337 "scanner.l"
tok(T_NAMESPACE);
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 338 "scanner.l"
tok(T_TRAIT);
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 339 "scanner.l"
tok(T_INSTEADOF);
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 340 "scanner.l"
tok(T_YIELD);
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 341 "scanner.l"
tok(T_VARIADIC_PARAMETER);
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 342 "scanner.l"
tok(T_NS_C);
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 343 "scanner.l"
tok(T_DIR);
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 344 "scanner.l"
{
    // expecting_xhp_class_statements is set in some actions in the grammar.
    // This means the lexer and parser are interdependent.
    if ((last_token() == '{' || last_token() == '}' || last_token() == ';') &&
        (yyextra->expecting_xhp_class_statements)) {
      tok(T_XHP_ATTRIBUTE);
    } else {
      tok(T_STRING);
    }
  }
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 354 "scanner.l"
{
    if ((last_token() == '{' || last_token() == '}' || last_token() == ';') &&
        (yyextra->expecting_xhp_class_statements)) {
      tok(T_XHP_CATEGORY);
    } else {
      tok(T_STRING);
    }
  }
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 362 "scanner.l"
{
    if ((last_token() == '{' || last_token() == '}' || last_token() == ';') &&
        (yyextra->expecting_xhp_class_statements)) {
      tok(T_XHP_CHILDREN);
    } else {
      tok(T_STRING);
    }
  }
	YY_BREAK

/* Operators */

case 111:
YY_RULE_SETUP
#line 374 "scanner.l"
tok(T_PLUS_EQUAL);
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 375 "scanner.l"
tok(T_MINUS_EQUAL);
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 376 "scanner.l"
tok(T_MUL_EQUAL);
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 377 "scanner.l"
tok(T_DIV_EQUAL);
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 378 "scanner.l"
tok(T_CONCAT_EQUAL);
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 379 "scanner.l"
tok(T_MOD_EQUAL);
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 380 "scanner.l"
tok(T_AND_EQUAL);
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 381 "scanner.l"
tok(T_OR_EQUAL);
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 382 "scanner.l"
tok(T_XOR_EQUAL);
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 383 "scanner.l"
tok(T_SL_EQUAL);
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 384 "scanner.l"
tok(T_SR_EQUAL);
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 385 "scanner.l"
tok(T_BOOLEAN_OR);
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 386 "scanner.l"
tok(T_BOOLEAN_AND);
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 387 "scanner.l"
tok(T_IS_EQUAL);
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 388 "scanner.l"
tok(T_IS_NOT_EQUAL);
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 389 "scanner.l"
tok(T_IS_IDENTICAL);
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 390 "scanner.l"
tok(T_IS_NOT_IDENTICAL);
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 391 "scanner.l"
tok(T_IS_SMALLER_OR_EQUAL);
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 392 "scanner.l"
tok(T_IS_GREATER_OR_EQUAL);
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 393 "scanner.l"
tok(T_SL);
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 394 "scanner.l"
tok(T_SR);
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 395 "scanner.l"
tok(T_INC);
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 396 "scanner.l"
tok(T_DEC);
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 397 "scanner.l"
tok(T_OBJECT_OPERATOR);
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 398 "scanner.l"
tok(T_DOUBLE_ARROW);
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 399 "scanner.l"
tok(T_PAAMAYIM_NEKUDOTAYIM);
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 400 "scanner.l"
tok(T_NS_SEPARATOR);
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 401 "scanner.l"
{
    // A colon can either mean the start (or component) of an XHP class,
    // a ternary expression (as in 1?false:null), the colon of a 'case', 
    // or finally the start of a block in the old PHP syntax. The following
    // disambiguate between the XHP case, which requires a special token,
    // and the other cases.
    switch (yyextra->last_token) {
      // In a ternary expression, the colon must follow a full-fledged
      // expression so seeing for instance a binary operator means
      // it must be an XHP class.
      case ',': case '=': case '|': case '^': case '&': case '<': case '>':
      case '+': case '-': case '%': case '!': case '~': case '[': case '(':
      case '{': case '.':
      case T_LOGICAL_OR: case T_LOGICAL_XOR: case T_LOGICAL_AND:
      case T_PLUS_EQUAL: case T_MINUS_EQUAL: case T_MUL_EQUAL:
      case T_DIV_EQUAL: case T_CONCAT_EQUAL: case T_MOD_EQUAL:
      case T_AND_EQUAL: case T_OR_EQUAL: case T_XOR_EQUAL:
      case T_SL_EQUAL: case T_SR_EQUAL: case T_BOOLEAN_OR:
      case T_BOOLEAN_AND: case T_IS_EQUAL: case T_IS_NOT_EQUAL:
      case T_IS_IDENTICAL: case T_IS_NOT_IDENTICAL: case T_IS_SMALLER_OR_EQUAL:
      case T_IS_GREATER_OR_EQUAL:
      // An XHP class can also occur after certain keywords. Not sure
      // we got them all covered though.
      case T_ECHO: case T_RETURN:
      case T_EXTENDS: case T_INSTANCEOF: case T_DOUBLE_ARROW:
      case T_XHP_ATTRIBUTE: case T_IMPLEMENTS:
        tok(T_XHP_COLON);
        break;
      default:
        tok(':');
        break;
    }
  }
	YY_BREAK

/* Casts */

case 139:
YY_RULE_SETUP
#line 438 "scanner.l"
tok(T_INT_CAST);
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 439 "scanner.l"
tok(T_DOUBLE_CAST);
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 440 "scanner.l"
tok(T_STRING_CAST);
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 441 "scanner.l"
tok(T_UNICODE_CAST);
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 442 "scanner.l"
tok(T_BINARY_CAST);
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 443 "scanner.l"
tok(T_ARRAY_CAST);
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 444 "scanner.l"
tok(T_OBJECT_CAST);
	YY_BREAK
case 146:
YY_RULE_SETUP
#line 445 "scanner.l"
tok(T_BOOL_CAST);
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 446 "scanner.l"
tok(T_UNSET_CAST);
	YY_BREAK

/* Scalars (parsing these doesn't really matter since we just pass them through literally) */

case 148:
YY_RULE_SETUP
#line 451 "scanner.l"
tok(T_LNUMBER);
	YY_BREAK
case 149:
YY_RULE_SETUP
#line 452 "scanner.l"
tok(T_DNUMBER);
	YY_BREAK
case 150:
YY_RULE_SETUP
#line 453 "scanner.l"
tok(T_STRING);
	YY_BREAK
case 151:
YY_RULE_SETUP
#line 454 "scanner.l"
tok(T_VARIABLE);
	YY_BREAK
case 152:
/* rule 152 can match eol */
YY_RULE_SETUP
#line 455 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_CONSTANT_ENCAPSED_STRING);
  }
	YY_BREAK
case 153:
/* rule 153 can match eol */
YY_RULE_SETUP
#line 459 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_BACKTICKS_EXPR);
  }
	YY_BREAK

/* (HERE|NOW)DOC's */
case 154:
YY_RULE_SETUP
#line 466 "scanner.l"
{
  push_state(PHP_HEREDOC_START);
  yyextra->heredoc_yyleng = yyleng;
  yymore();
}
	YY_BREAK

case 155:
YY_RULE_SETUP
#line 472 "scanner.l"
{
    // Create a new string for the heredoc label. Since we're using yymore above
    // yytext will actually start at the "<<<" and not the label. Use of
    // heredoc_yyleng jumps past that. Then we add 1 to get past the " or '. The
    // match is similar to calculate length.
    yyextra->heredoc_label = string(yytext + yyextra->heredoc_yyleng + 1, yyleng - yyextra->heredoc_yyleng - 2);
    set_state(PHP_HEREDOC_NSTART);
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 482 "scanner.l"
{
    yyextra->heredoc_label = string(yytext + yyextra->heredoc_yyleng);
    set_state(PHP_HEREDOC_NSTART);
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK

case 157:
/* rule 157 can match eol */
YY_RULE_SETUP
#line 489 "scanner.l"
{
  ++yyextra->lineno;
  yyextra->heredoc_data = yytext + yyleng;
  set_state(PHP_HEREDOC_DATA);
  yymore();
}
	YY_BREAK

case 158:
/* rule 158 can match eol */
YY_RULE_SETUP
#line 496 "scanner.l"
{
    ++yyextra->lineno;
    set_state(PHP_HEREDOC_NEWLINE);
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK


case 159:
/* rule 159 can match eol */
YY_RULE_SETUP
#line 504 "scanner.l"
{
    if (strncmp(yyextra->heredoc_label.c_str(), yytext + yyextra->heredoc_yyleng, yyextra->heredoc_label.size()) == 0) {
      switch (yytext[yyextra->heredoc_yyleng + yyextra->heredoc_label.size()]) {
        case ';': case '\n': case '\r':
          yyless(yyleng - (yyleng - yyextra->heredoc_yyleng - yyextra->heredoc_label.size()));
          pop_state();
          tok(T_HEREDOC);
      }
    }
    ++yyextra->lineno;
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK
case 160:
YY_RULE_SETUP
#line 517 "scanner.l"
{
    set_state(PHP_HEREDOC_DATA);
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK
case 161:
/* rule 161 can match eol */
YY_RULE_SETUP
#line 522 "scanner.l"
{
    ++yyextra->lineno;
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK

/* XHP */

case 162:
/* rule 162 can match eol */
YY_RULE_SETUP
#line 531 "scanner.l"
yy_scan_newlines(yytext, yyg);
	YY_BREAK


case 163:
YY_RULE_SETUP
#line 534 "scanner.l"
tok(T_XHP_COLON);
	YY_BREAK
case 164:
YY_RULE_SETUP
#line 535 "scanner.l"
tok(T_XHP_HYPHEN);
	YY_BREAK
case 165:
YY_RULE_SETUP
#line 536 "scanner.l"
{
    pop_state();

    // Hack: Please don't expect this to work: $foo = <a href={Thing::if} />;
    // PHP will let you use reserved words for member variables and methods, but
    // they are verboten in XHP classes now.
    //
    // We don't use tok() because that pushes PHP_NO_RESERVED_WORDS, which the
    // scanner expects to pop at some point, but XHP_LABEL (in parser.y) will pop
    // sooner and then you're left with an imbalanced tag stack and that's when
    // the fun stops.
  *yylval = code_rope(yytext, yyextra->first_lineno, yyextra->lineno - yyextra->first_lineno);
#ifdef DEBUG
  yy_log_token(T_PAAMAYIM_NEKUDOTAYIM);
#endif
    return T_PAAMAYIM_NEKUDOTAYIM;
  }
	YY_BREAK
case 166:
YY_RULE_SETUP
#line 553 "scanner.l"
{
    pop_state();
    tok(T_DEC);
  }
	YY_BREAK
case 167:
/* rule 167 can match eol */
YY_RULE_SETUP
#line 557 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    pop_state();
    tok(T_XHP_WHITESPACE);
  }
	YY_BREAK
case 168:
YY_RULE_SETUP
#line 562 "scanner.l"
tok(T_STRING);
	YY_BREAK
case 169:
YY_RULE_SETUP
#line 563 "scanner.l"
{
    pop_state();
    tok(yytext[0]);
  }
	YY_BREAK


case 170:
YY_RULE_SETUP
#line 570 "scanner.l"
tok(yytext[0]);
	YY_BREAK
case 171:
/* rule 171 can match eol */
YY_RULE_SETUP
#line 571 "scanner.l"
yy_scan_newlines(yytext, yyg);
	YY_BREAK
case 172:
YY_RULE_SETUP
#line 572 "scanner.l"
tok(T_STRING);
	YY_BREAK


case 173:
/* rule 173 can match eol */
YY_RULE_SETUP
#line 576 "scanner.l"
tok(T_XHP_TEXT);
	YY_BREAK
case 174:
YY_RULE_SETUP
#line 577 "scanner.l"
{
    pop_state();
    tok('"');
  }
	YY_BREAK


case 175:
/* rule 175 can match eol */
YY_RULE_SETUP
#line 584 "scanner.l"
{
    /* ignore whitespace at the start */
    yy_scan_newlines(yytext, yyg);
    unput(' ');
    set_state(XHP_CHILD);
  }
	YY_BREAK
case 176:
YY_RULE_SETUP
#line 590 "scanner.l"
{
    yyless(0);
    set_state(XHP_CHILD);
  }
	YY_BREAK

/* Below we use tokt() (and not tok) which internally transits to
  * the XHP_AFTER_ENT state. */

/* xml entities */
case 177:
YY_RULE_SETUP
#line 600 "scanner.l"
tokt("\"");
	YY_BREAK
case 178:
YY_RULE_SETUP
#line 601 "scanner.l"
tokt("&");
	YY_BREAK
case 179:
YY_RULE_SETUP
#line 602 "scanner.l"
tokt("\\'");
	YY_BREAK
case 180:
YY_RULE_SETUP
#line 603 "scanner.l"
tokt("<")
	YY_BREAK
case 181:
YY_RULE_SETUP
#line 604 "scanner.l"
tokt(">");
	YY_BREAK
/* html entities */
case 182:
YY_RULE_SETUP
#line 607 "scanner.l"
tokt("\u00A0");
	YY_BREAK
case 183:
YY_RULE_SETUP
#line 608 "scanner.l"
tokt("\u00A1");
	YY_BREAK
case 184:
YY_RULE_SETUP
#line 609 "scanner.l"
tokt("\u00A2");
	YY_BREAK
case 185:
YY_RULE_SETUP
#line 610 "scanner.l"
tokt("\u00A3");
	YY_BREAK
case 186:
YY_RULE_SETUP
#line 611 "scanner.l"
tokt("\u00A4");
	YY_BREAK
case 187:
YY_RULE_SETUP
#line 612 "scanner.l"
tokt("\u00A5");
	YY_BREAK
case 188:
YY_RULE_SETUP
#line 613 "scanner.l"
tokt("\u00A6");
	YY_BREAK
case 189:
YY_RULE_SETUP
#line 614 "scanner.l"
tokt("\u00A7");
	YY_BREAK
case 190:
YY_RULE_SETUP
#line 615 "scanner.l"
tokt("\u00A8");
	YY_BREAK
case 191:
YY_RULE_SETUP
#line 616 "scanner.l"
tokt("\u00A9");
	YY_BREAK
case 192:
YY_RULE_SETUP
#line 617 "scanner.l"
tokt("\u00AA");
	YY_BREAK
case 193:
YY_RULE_SETUP
#line 618 "scanner.l"
tokt("\u00AB");
	YY_BREAK
case 194:
YY_RULE_SETUP
#line 619 "scanner.l"
tokt("\u00AC");
	YY_BREAK
case 195:
YY_RULE_SETUP
#line 620 "scanner.l"
tokt("\u00AD");
	YY_BREAK
case 196:
YY_RULE_SETUP
#line 621 "scanner.l"
tokt("\u00AE");
	YY_BREAK
case 197:
YY_RULE_SETUP
#line 622 "scanner.l"
tokt("\u00AF");
	YY_BREAK
case 198:
YY_RULE_SETUP
#line 623 "scanner.l"
tokt("\u00B0");
	YY_BREAK
case 199:
YY_RULE_SETUP
#line 624 "scanner.l"
tokt("\u00B1");
	YY_BREAK
case 200:
YY_RULE_SETUP
#line 625 "scanner.l"
tokt("\u00B2");
	YY_BREAK
case 201:
YY_RULE_SETUP
#line 626 "scanner.l"
tokt("\u00B3");
	YY_BREAK
case 202:
YY_RULE_SETUP
#line 627 "scanner.l"
tokt("\u00B4");
	YY_BREAK
case 203:
YY_RULE_SETUP
#line 628 "scanner.l"
tokt("\u00B5");
	YY_BREAK
case 204:
YY_RULE_SETUP
#line 629 "scanner.l"
tokt("\u00B6");
	YY_BREAK
case 205:
YY_RULE_SETUP
#line 630 "scanner.l"
tokt("\u00B7");
	YY_BREAK
case 206:
YY_RULE_SETUP
#line 631 "scanner.l"
tokt("\u00B8");
	YY_BREAK
case 207:
YY_RULE_SETUP
#line 632 "scanner.l"
tokt("\u00B9");
	YY_BREAK
case 208:
YY_RULE_SETUP
#line 633 "scanner.l"
tokt("\u00BA");
	YY_BREAK
case 209:
YY_RULE_SETUP
#line 634 "scanner.l"
tokt("\u00BB");
	YY_BREAK
case 210:
YY_RULE_SETUP
#line 635 "scanner.l"
tokt("\u00BC");
	YY_BREAK
case 211:
YY_RULE_SETUP
#line 636 "scanner.l"
tokt("\u00BD");
	YY_BREAK
case 212:
YY_RULE_SETUP
#line 637 "scanner.l"
tokt("\u00BE");
	YY_BREAK
case 213:
YY_RULE_SETUP
#line 638 "scanner.l"
tokt("\u00BF");
	YY_BREAK
case 214:
YY_RULE_SETUP
#line 639 "scanner.l"
tokt("\u00C0");
	YY_BREAK
case 215:
YY_RULE_SETUP
#line 640 "scanner.l"
tokt("\u00C1");
	YY_BREAK
case 216:
YY_RULE_SETUP
#line 641 "scanner.l"
tokt("\u00C2");
	YY_BREAK
case 217:
YY_RULE_SETUP
#line 642 "scanner.l"
tokt("\u00C3");
	YY_BREAK
case 218:
YY_RULE_SETUP
#line 643 "scanner.l"
tokt("\u00C4");
	YY_BREAK
case 219:
YY_RULE_SETUP
#line 644 "scanner.l"
tokt("\u00C5");
	YY_BREAK
case 220:
YY_RULE_SETUP
#line 645 "scanner.l"
tokt("\u00C6");
	YY_BREAK
case 221:
YY_RULE_SETUP
#line 646 "scanner.l"
tokt("\u00C7");
	YY_BREAK
case 222:
YY_RULE_SETUP
#line 647 "scanner.l"
tokt("\u00C8");
	YY_BREAK
case 223:
YY_RULE_SETUP
#line 648 "scanner.l"
tokt("\u00C9");
	YY_BREAK
case 224:
YY_RULE_SETUP
#line 649 "scanner.l"
tokt("\u00CA");
	YY_BREAK
case 225:
YY_RULE_SETUP
#line 650 "scanner.l"
tokt("\u00CB");
	YY_BREAK
case 226:
YY_RULE_SETUP
#line 651 "scanner.l"
tokt("\u00CC");
	YY_BREAK
case 227:
YY_RULE_SETUP
#line 652 "scanner.l"
tokt("\u00CD");
	YY_BREAK
case 228:
YY_RULE_SETUP
#line 653 "scanner.l"
tokt("\u00CE");
	YY_BREAK
case 229:
YY_RULE_SETUP
#line 654 "scanner.l"
tokt("\u00CF");
	YY_BREAK
case 230:
YY_RULE_SETUP
#line 655 "scanner.l"
tokt("\u00D0");
	YY_BREAK
case 231:
YY_RULE_SETUP
#line 656 "scanner.l"
tokt("\u00D1");
	YY_BREAK
case 232:
YY_RULE_SETUP
#line 657 "scanner.l"
tokt("\u00D2");
	YY_BREAK
case 233:
YY_RULE_SETUP
#line 658 "scanner.l"
tokt("\u00D3");
	YY_BREAK
case 234:
YY_RULE_SETUP
#line 659 "scanner.l"
tokt("\u00D4");
	YY_BREAK
case 235:
YY_RULE_SETUP
#line 660 "scanner.l"
tokt("\u00D5");
	YY_BREAK
case 236:
YY_RULE_SETUP
#line 661 "scanner.l"
tokt("\u00D6");
	YY_BREAK
case 237:
YY_RULE_SETUP
#line 662 "scanner.l"
tokt("\u00D7");
	YY_BREAK
case 238:
YY_RULE_SETUP
#line 663 "scanner.l"
tokt("\u00D8");
	YY_BREAK
case 239:
YY_RULE_SETUP
#line 664 "scanner.l"
tokt("\u00D9");
	YY_BREAK
case 240:
YY_RULE_SETUP
#line 665 "scanner.l"
tokt("\u00DA");
	YY_BREAK
case 241:
YY_RULE_SETUP
#line 666 "scanner.l"
tokt("\u00DB");
	YY_BREAK
case 242:
YY_RULE_SETUP
#line 667 "scanner.l"
tokt("\u00DC");
	YY_BREAK
case 243:
YY_RULE_SETUP
#line 668 "scanner.l"
tokt("\u00DD");
	YY_BREAK
case 244:
YY_RULE_SETUP
#line 669 "scanner.l"
tokt("\u00DE");
	YY_BREAK
case 245:
YY_RULE_SETUP
#line 670 "scanner.l"
tokt("\u00DF");
	YY_BREAK
case 246:
YY_RULE_SETUP
#line 671 "scanner.l"
tokt("\u00E0");
	YY_BREAK
case 247:
YY_RULE_SETUP
#line 672 "scanner.l"
tokt("\u00E1");
	YY_BREAK
case 248:
YY_RULE_SETUP
#line 673 "scanner.l"
tokt("\u00E2");
	YY_BREAK
case 249:
YY_RULE_SETUP
#line 674 "scanner.l"
tokt("\u00E3");
	YY_BREAK
case 250:
YY_RULE_SETUP
#line 675 "scanner.l"
tokt("\u00E4");
	YY_BREAK
case 251:
YY_RULE_SETUP
#line 676 "scanner.l"
tokt("\u00E5");
	YY_BREAK
case 252:
YY_RULE_SETUP
#line 677 "scanner.l"
tokt("\u00E6");
	YY_BREAK
case 253:
YY_RULE_SETUP
#line 678 "scanner.l"
tokt("\u00E7");
	YY_BREAK
case 254:
YY_RULE_SETUP
#line 679 "scanner.l"
tokt("\u00E8");
	YY_BREAK
case 255:
YY_RULE_SETUP
#line 680 "scanner.l"
tokt("\u00E9");
	YY_BREAK
case 256:
YY_RULE_SETUP
#line 681 "scanner.l"
tokt("\u00EA");
	YY_BREAK
case 257:
YY_RULE_SETUP
#line 682 "scanner.l"
tokt("\u00EB");
	YY_BREAK
case 258:
YY_RULE_SETUP
#line 683 "scanner.l"
tokt("\u00EC");
	YY_BREAK
case 259:
YY_RULE_SETUP
#line 684 "scanner.l"
tokt("\u00ED");
	YY_BREAK
case 260:
YY_RULE_SETUP
#line 685 "scanner.l"
tokt("\u00EE");
	YY_BREAK
case 261:
YY_RULE_SETUP
#line 686 "scanner.l"
tokt("\u00EF");
	YY_BREAK
case 262:
YY_RULE_SETUP
#line 687 "scanner.l"
tokt("\u00F0");
	YY_BREAK
case 263:
YY_RULE_SETUP
#line 688 "scanner.l"
tokt("\u00F1");
	YY_BREAK
case 264:
YY_RULE_SETUP
#line 689 "scanner.l"
tokt("\u00F2");
	YY_BREAK
case 265:
YY_RULE_SETUP
#line 690 "scanner.l"
tokt("\u00F3");
	YY_BREAK
case 266:
YY_RULE_SETUP
#line 691 "scanner.l"
tokt("\u00F4");
	YY_BREAK
case 267:
YY_RULE_SETUP
#line 692 "scanner.l"
tokt("\u00F5");
	YY_BREAK
case 268:
YY_RULE_SETUP
#line 693 "scanner.l"
tokt("\u00F6");
	YY_BREAK
case 269:
YY_RULE_SETUP
#line 694 "scanner.l"
tokt("\u00F7");
	YY_BREAK
case 270:
YY_RULE_SETUP
#line 695 "scanner.l"
tokt("\u00F8");
	YY_BREAK
case 271:
YY_RULE_SETUP
#line 696 "scanner.l"
tokt("\u00F9");
	YY_BREAK
case 272:
YY_RULE_SETUP
#line 697 "scanner.l"
tokt("\u00FA");
	YY_BREAK
case 273:
YY_RULE_SETUP
#line 698 "scanner.l"
tokt("\u00FB");
	YY_BREAK
case 274:
YY_RULE_SETUP
#line 699 "scanner.l"
tokt("\u00FC");
	YY_BREAK
case 275:
YY_RULE_SETUP
#line 700 "scanner.l"
tokt("\u00FD");
	YY_BREAK
case 276:
YY_RULE_SETUP
#line 701 "scanner.l"
tokt("\u00FE");
	YY_BREAK
case 277:
YY_RULE_SETUP
#line 702 "scanner.l"
tokt("\u00FF");
	YY_BREAK
case 278:
YY_RULE_SETUP
#line 703 "scanner.l"
tokt("\u0152");
	YY_BREAK
case 279:
YY_RULE_SETUP
#line 704 "scanner.l"
tokt("\u0153");
	YY_BREAK
case 280:
YY_RULE_SETUP
#line 705 "scanner.l"
tokt("\u0160");
	YY_BREAK
case 281:
YY_RULE_SETUP
#line 706 "scanner.l"
tokt("\u0161");
	YY_BREAK
case 282:
YY_RULE_SETUP
#line 707 "scanner.l"
tokt("\u0178");
	YY_BREAK
case 283:
YY_RULE_SETUP
#line 708 "scanner.l"
tokt("\u0192");
	YY_BREAK
case 284:
YY_RULE_SETUP
#line 709 "scanner.l"
tokt("\u02C6");
	YY_BREAK
case 285:
YY_RULE_SETUP
#line 710 "scanner.l"
tokt("\u02DC");
	YY_BREAK
case 286:
YY_RULE_SETUP
#line 711 "scanner.l"
tokt("\u0391");
	YY_BREAK
case 287:
YY_RULE_SETUP
#line 712 "scanner.l"
tokt("\u0392");
	YY_BREAK
case 288:
YY_RULE_SETUP
#line 713 "scanner.l"
tokt("\u0393");
	YY_BREAK
case 289:
YY_RULE_SETUP
#line 714 "scanner.l"
tokt("\u0394");
	YY_BREAK
case 290:
YY_RULE_SETUP
#line 715 "scanner.l"
tokt("\u0395");
	YY_BREAK
case 291:
YY_RULE_SETUP
#line 716 "scanner.l"
tokt("\u0396");
	YY_BREAK
case 292:
YY_RULE_SETUP
#line 717 "scanner.l"
tokt("\u0397");
	YY_BREAK
case 293:
YY_RULE_SETUP
#line 718 "scanner.l"
tokt("\u0398");
	YY_BREAK
case 294:
YY_RULE_SETUP
#line 719 "scanner.l"
tokt("\u0399");
	YY_BREAK
case 295:
YY_RULE_SETUP
#line 720 "scanner.l"
tokt("\u039A");
	YY_BREAK
case 296:
YY_RULE_SETUP
#line 721 "scanner.l"
tokt("\u039B");
	YY_BREAK
case 297:
YY_RULE_SETUP
#line 722 "scanner.l"
tokt("\u039C");
	YY_BREAK
case 298:
YY_RULE_SETUP
#line 723 "scanner.l"
tokt("\u039D");
	YY_BREAK
case 299:
YY_RULE_SETUP
#line 724 "scanner.l"
tokt("\u039E");
	YY_BREAK
case 300:
YY_RULE_SETUP
#line 725 "scanner.l"
tokt("\u039F");
	YY_BREAK
case 301:
YY_RULE_SETUP
#line 726 "scanner.l"
tokt("\u03A0");
	YY_BREAK
case 302:
YY_RULE_SETUP
#line 727 "scanner.l"
tokt("\u03A1");
	YY_BREAK
case 303:
YY_RULE_SETUP
#line 728 "scanner.l"
tokt("\u03A3");
	YY_BREAK
case 304:
YY_RULE_SETUP
#line 729 "scanner.l"
tokt("\u03A4");
	YY_BREAK
case 305:
YY_RULE_SETUP
#line 730 "scanner.l"
tokt("\u03A5");
	YY_BREAK
case 306:
YY_RULE_SETUP
#line 731 "scanner.l"
tokt("\u03A6");
	YY_BREAK
case 307:
YY_RULE_SETUP
#line 732 "scanner.l"
tokt("\u03A7");
	YY_BREAK
case 308:
YY_RULE_SETUP
#line 733 "scanner.l"
tokt("\u03A8");
	YY_BREAK
case 309:
YY_RULE_SETUP
#line 734 "scanner.l"
tokt("\u03A9");
	YY_BREAK
case 310:
YY_RULE_SETUP
#line 735 "scanner.l"
tokt("\u03B1");
	YY_BREAK
case 311:
YY_RULE_SETUP
#line 736 "scanner.l"
tokt("\u03B2");
	YY_BREAK
case 312:
YY_RULE_SETUP
#line 737 "scanner.l"
tokt("\u03B3");
	YY_BREAK
case 313:
YY_RULE_SETUP
#line 738 "scanner.l"
tokt("\u03B4");
	YY_BREAK
case 314:
YY_RULE_SETUP
#line 739 "scanner.l"
tokt("\u03B5");
	YY_BREAK
case 315:
YY_RULE_SETUP
#line 740 "scanner.l"
tokt("\u03B6");
	YY_BREAK
case 316:
YY_RULE_SETUP
#line 741 "scanner.l"
tokt("\u03B7");
	YY_BREAK
case 317:
YY_RULE_SETUP
#line 742 "scanner.l"
tokt("\u03B8");
	YY_BREAK
case 318:
YY_RULE_SETUP
#line 743 "scanner.l"
tokt("\u03B9");
	YY_BREAK
case 319:
YY_RULE_SETUP
#line 744 "scanner.l"
tokt("\u03BA");
	YY_BREAK
case 320:
YY_RULE_SETUP
#line 745 "scanner.l"
tokt("\u03BB");
	YY_BREAK
case 321:
YY_RULE_SETUP
#line 746 "scanner.l"
tokt("\u03BC");
	YY_BREAK
case 322:
YY_RULE_SETUP
#line 747 "scanner.l"
tokt("\u03BD");
	YY_BREAK
case 323:
YY_RULE_SETUP
#line 748 "scanner.l"
tokt("\u03BE");
	YY_BREAK
case 324:
YY_RULE_SETUP
#line 749 "scanner.l"
tokt("\u03BF");
	YY_BREAK
case 325:
YY_RULE_SETUP
#line 750 "scanner.l"
tokt("\u03C0");
	YY_BREAK
case 326:
YY_RULE_SETUP
#line 751 "scanner.l"
tokt("\u03C1");
	YY_BREAK
case 327:
YY_RULE_SETUP
#line 752 "scanner.l"
tokt("\u03C2");
	YY_BREAK
case 328:
YY_RULE_SETUP
#line 753 "scanner.l"
tokt("\u03C3");
	YY_BREAK
case 329:
YY_RULE_SETUP
#line 754 "scanner.l"
tokt("\u03C4");
	YY_BREAK
case 330:
YY_RULE_SETUP
#line 755 "scanner.l"
tokt("\u03C5");
	YY_BREAK
case 331:
YY_RULE_SETUP
#line 756 "scanner.l"
tokt("\u03C6");
	YY_BREAK
case 332:
YY_RULE_SETUP
#line 757 "scanner.l"
tokt("\u03C7");
	YY_BREAK
case 333:
YY_RULE_SETUP
#line 758 "scanner.l"
tokt("\u03C8");
	YY_BREAK
case 334:
YY_RULE_SETUP
#line 759 "scanner.l"
tokt("\u03C9");
	YY_BREAK
case 335:
YY_RULE_SETUP
#line 760 "scanner.l"
tokt("\u03D1");
	YY_BREAK
case 336:
YY_RULE_SETUP
#line 761 "scanner.l"
tokt("\u03D2");
	YY_BREAK
case 337:
YY_RULE_SETUP
#line 762 "scanner.l"
tokt("\u03D6");
	YY_BREAK
case 338:
YY_RULE_SETUP
#line 763 "scanner.l"
tokt("\u2002");
	YY_BREAK
case 339:
YY_RULE_SETUP
#line 764 "scanner.l"
tokt("\u2003");
	YY_BREAK
case 340:
YY_RULE_SETUP
#line 765 "scanner.l"
tokt("\u2009");
	YY_BREAK
case 341:
YY_RULE_SETUP
#line 766 "scanner.l"
tokt("\u200C");
	YY_BREAK
case 342:
YY_RULE_SETUP
#line 767 "scanner.l"
tokt("\u200D");
	YY_BREAK
case 343:
YY_RULE_SETUP
#line 768 "scanner.l"
tokt("\u200E");
	YY_BREAK
case 344:
YY_RULE_SETUP
#line 769 "scanner.l"
tokt("\u200F");
	YY_BREAK
case 345:
YY_RULE_SETUP
#line 770 "scanner.l"
tokt("\u2013");
	YY_BREAK
case 346:
YY_RULE_SETUP
#line 771 "scanner.l"
tokt("\u2014");
	YY_BREAK
case 347:
YY_RULE_SETUP
#line 772 "scanner.l"
tokt("\u2018");
	YY_BREAK
case 348:
YY_RULE_SETUP
#line 773 "scanner.l"
tokt("\u2019");
	YY_BREAK
case 349:
YY_RULE_SETUP
#line 774 "scanner.l"
tokt("\u201A");
	YY_BREAK
case 350:
YY_RULE_SETUP
#line 775 "scanner.l"
tokt("\u201C");
	YY_BREAK
case 351:
YY_RULE_SETUP
#line 776 "scanner.l"
tokt("\u201D");
	YY_BREAK
case 352:
YY_RULE_SETUP
#line 777 "scanner.l"
tokt("\u201E");
	YY_BREAK
case 353:
YY_RULE_SETUP
#line 778 "scanner.l"
tokt("\u2020");
	YY_BREAK
case 354:
YY_RULE_SETUP
#line 779 "scanner.l"
tokt("\u2021");
	YY_BREAK
case 355:
YY_RULE_SETUP
#line 780 "scanner.l"
tokt("\u2022");
	YY_BREAK
case 356:
YY_RULE_SETUP
#line 781 "scanner.l"
tokt("\u2026");
	YY_BREAK
case 357:
YY_RULE_SETUP
#line 782 "scanner.l"
tokt("\u2030");
	YY_BREAK
case 358:
YY_RULE_SETUP
#line 783 "scanner.l"
tokt("\u2032");
	YY_BREAK
case 359:
YY_RULE_SETUP
#line 784 "scanner.l"
tokt("\u2033");
	YY_BREAK
case 360:
YY_RULE_SETUP
#line 785 "scanner.l"
tokt("\u2039");
	YY_BREAK
case 361:
YY_RULE_SETUP
#line 786 "scanner.l"
tokt("\u203A");
	YY_BREAK
case 362:
YY_RULE_SETUP
#line 787 "scanner.l"
tokt("\u203E");
	YY_BREAK
case 363:
YY_RULE_SETUP
#line 788 "scanner.l"
tokt("\u2044");
	YY_BREAK
case 364:
YY_RULE_SETUP
#line 789 "scanner.l"
tokt("\u20AC");
	YY_BREAK
case 365:
YY_RULE_SETUP
#line 790 "scanner.l"
tokt("\u2111");
	YY_BREAK
case 366:
YY_RULE_SETUP
#line 791 "scanner.l"
tokt("\u2118");
	YY_BREAK
case 367:
YY_RULE_SETUP
#line 792 "scanner.l"
tokt("\u211C");
	YY_BREAK
case 368:
YY_RULE_SETUP
#line 793 "scanner.l"
tokt("\u2122");
	YY_BREAK
case 369:
YY_RULE_SETUP
#line 794 "scanner.l"
tokt("\u2135");
	YY_BREAK
case 370:
YY_RULE_SETUP
#line 795 "scanner.l"
tokt("\u2190");
	YY_BREAK
case 371:
YY_RULE_SETUP
#line 796 "scanner.l"
tokt("\u2191");
	YY_BREAK
case 372:
YY_RULE_SETUP
#line 797 "scanner.l"
tokt("\u2192");
	YY_BREAK
case 373:
YY_RULE_SETUP
#line 798 "scanner.l"
tokt("\u2193");
	YY_BREAK
case 374:
YY_RULE_SETUP
#line 799 "scanner.l"
tokt("\u2194");
	YY_BREAK
case 375:
YY_RULE_SETUP
#line 800 "scanner.l"
tokt("\u21B5");
	YY_BREAK
case 376:
YY_RULE_SETUP
#line 801 "scanner.l"
tokt("\u21D0");
	YY_BREAK
case 377:
YY_RULE_SETUP
#line 802 "scanner.l"
tokt("\u21D1");
	YY_BREAK
case 378:
YY_RULE_SETUP
#line 803 "scanner.l"
tokt("\u21D2");
	YY_BREAK
case 379:
YY_RULE_SETUP
#line 804 "scanner.l"
tokt("\u21D3");
	YY_BREAK
case 380:
YY_RULE_SETUP
#line 805 "scanner.l"
tokt("\u21D4");
	YY_BREAK
case 381:
YY_RULE_SETUP
#line 806 "scanner.l"
tokt("\u2200");
	YY_BREAK
case 382:
YY_RULE_SETUP
#line 807 "scanner.l"
tokt("\u2202");
	YY_BREAK
case 383:
YY_RULE_SETUP
#line 808 "scanner.l"
tokt("\u2203");
	YY_BREAK
case 384:
YY_RULE_SETUP
#line 809 "scanner.l"
tokt("\u2205");
	YY_BREAK
case 385:
YY_RULE_SETUP
#line 810 "scanner.l"
tokt("\u2207");
	YY_BREAK
case 386:
YY_RULE_SETUP
#line 811 "scanner.l"
tokt("\u2208");
	YY_BREAK
case 387:
YY_RULE_SETUP
#line 812 "scanner.l"
tokt("\u2209");
	YY_BREAK
case 388:
YY_RULE_SETUP
#line 813 "scanner.l"
tokt("\u220B");
	YY_BREAK
case 389:
YY_RULE_SETUP
#line 814 "scanner.l"
tokt("\u220F");
	YY_BREAK
case 390:
YY_RULE_SETUP
#line 815 "scanner.l"
tokt("\u2211");
	YY_BREAK
case 391:
YY_RULE_SETUP
#line 816 "scanner.l"
tokt("\u2212");
	YY_BREAK
case 392:
YY_RULE_SETUP
#line 817 "scanner.l"
tokt("\u2217");
	YY_BREAK
case 393:
YY_RULE_SETUP
#line 818 "scanner.l"
tokt("\u221A");
	YY_BREAK
case 394:
YY_RULE_SETUP
#line 819 "scanner.l"
tokt("\u221D");
	YY_BREAK
case 395:
YY_RULE_SETUP
#line 820 "scanner.l"
tokt("\u221E");
	YY_BREAK
case 396:
YY_RULE_SETUP
#line 821 "scanner.l"
tokt("\u2220");
	YY_BREAK
case 397:
YY_RULE_SETUP
#line 822 "scanner.l"
tokt("\u2227");
	YY_BREAK
case 398:
YY_RULE_SETUP
#line 823 "scanner.l"
tokt("\u2228");
	YY_BREAK
case 399:
YY_RULE_SETUP
#line 824 "scanner.l"
tokt("\u2229");
	YY_BREAK
case 400:
YY_RULE_SETUP
#line 825 "scanner.l"
tokt("\u222A");
	YY_BREAK
case 401:
YY_RULE_SETUP
#line 826 "scanner.l"
tokt("\u222B");
	YY_BREAK
case 402:
YY_RULE_SETUP
#line 827 "scanner.l"
tokt("\u2234");
	YY_BREAK
case 403:
YY_RULE_SETUP
#line 828 "scanner.l"
tokt("\u223C");
	YY_BREAK
case 404:
YY_RULE_SETUP
#line 829 "scanner.l"
tokt("\u2245");
	YY_BREAK
case 405:
YY_RULE_SETUP
#line 830 "scanner.l"
tokt("\u2248");
	YY_BREAK
case 406:
YY_RULE_SETUP
#line 831 "scanner.l"
tokt("\u2260");
	YY_BREAK
case 407:
YY_RULE_SETUP
#line 832 "scanner.l"
tokt("\u2261");
	YY_BREAK
case 408:
YY_RULE_SETUP
#line 833 "scanner.l"
tokt("\u2264");
	YY_BREAK
case 409:
YY_RULE_SETUP
#line 834 "scanner.l"
tokt("\u2265");
	YY_BREAK
case 410:
YY_RULE_SETUP
#line 835 "scanner.l"
tokt("\u2282");
	YY_BREAK
case 411:
YY_RULE_SETUP
#line 836 "scanner.l"
tokt("\u2283");
	YY_BREAK
case 412:
YY_RULE_SETUP
#line 837 "scanner.l"
tokt("\u2284");
	YY_BREAK
case 413:
YY_RULE_SETUP
#line 838 "scanner.l"
tokt("\u2286");
	YY_BREAK
case 414:
YY_RULE_SETUP
#line 839 "scanner.l"
tokt("\u2287");
	YY_BREAK
case 415:
YY_RULE_SETUP
#line 840 "scanner.l"
tokt("\u2295");
	YY_BREAK
case 416:
YY_RULE_SETUP
#line 841 "scanner.l"
tokt("\u2297");
	YY_BREAK
case 417:
YY_RULE_SETUP
#line 842 "scanner.l"
tokt("\u22A5");
	YY_BREAK
case 418:
YY_RULE_SETUP
#line 843 "scanner.l"
tokt("\u22C5");
	YY_BREAK
case 419:
YY_RULE_SETUP
#line 844 "scanner.l"
tokt("\u2308");
	YY_BREAK
case 420:
YY_RULE_SETUP
#line 845 "scanner.l"
tokt("\u2309");
	YY_BREAK
case 421:
YY_RULE_SETUP
#line 846 "scanner.l"
tokt("\u230A");
	YY_BREAK
case 422:
YY_RULE_SETUP
#line 847 "scanner.l"
tokt("\u230B");
	YY_BREAK
case 423:
YY_RULE_SETUP
#line 848 "scanner.l"
tokt("\u2329");
	YY_BREAK
case 424:
YY_RULE_SETUP
#line 849 "scanner.l"
tokt("\u232A");
	YY_BREAK
case 425:
YY_RULE_SETUP
#line 850 "scanner.l"
tokt("\u25CA");
	YY_BREAK
case 426:
YY_RULE_SETUP
#line 851 "scanner.l"
tokt("\u2660");
	YY_BREAK
case 427:
YY_RULE_SETUP
#line 852 "scanner.l"
tokt("\u2663");
	YY_BREAK
case 428:
YY_RULE_SETUP
#line 853 "scanner.l"
tokt("\u2665");
	YY_BREAK
case 429:
YY_RULE_SETUP
#line 854 "scanner.l"
tokt("\u2666");
	YY_BREAK
/* awesome entities */
case 430:
YY_RULE_SETUP
#line 857 "scanner.l"
tokt("\u2601");
	YY_BREAK
case 431:
YY_RULE_SETUP
#line 858 "scanner.l"
tokt("\u2602");
	YY_BREAK
case 432:
YY_RULE_SETUP
#line 859 "scanner.l"
tokt("\u2603");
	YY_BREAK
case 433:
YY_RULE_SETUP
#line 860 "scanner.l"
tokt("\u2745");
	YY_BREAK
case 434:
YY_RULE_SETUP
#line 861 "scanner.l"
tokt("\u2604");
	YY_BREAK
case 435:
YY_RULE_SETUP
#line 862 "scanner.l"
tokt("\u2608");
	YY_BREAK
/* pseudo entities */
case 436:
YY_RULE_SETUP
#line 865 "scanner.l"
tokt("\\'");
	YY_BREAK
case 437:
YY_RULE_SETUP
#line 866 "scanner.l"
tokt("\\\\");
	YY_BREAK
/* meta entities */
case 438:
YY_RULE_SETUP
#line 869 "scanner.l"
{
    char buf[5];
    utf8ize(atoi(yytext + 2), buf);
    tokt(buf);
  }
	YY_BREAK
case 439:
YY_RULE_SETUP
#line 874 "scanner.l"
{
    char buf[5];
    char *_;
    utf8ize(strtol(yytext + 3, &_, 16), buf);
    tokt(buf);
  }
	YY_BREAK
/* not entities */
case 440:
YY_RULE_SETUP
#line 882 "scanner.l"
{
    yymore();
    BEGIN(XHP_INVALID_ENTITY);
  }
	YY_BREAK


case 441:
/* rule 441 can match eol */
YY_RULE_SETUP
#line 889 "scanner.l"
{
    for (char* ii = yytext; *ii; ++ii) {
      if (*ii == ';') {
        ii[1] = 0;
        break;
      }
    }
    if (!yyextra->terminated) {
      yyextra->error = string("Invalid entity: (") + yytext + ")";
      yyextra->terminated = true;
    }
  }
	YY_BREAK


case 442:
/* rule 442 can match eol */
YY_RULE_SETUP
#line 904 "scanner.l"
{
    if (*yytext == '\r' || *yytext == '\n') {
      // Since we rewrite newlines into space we need to increment both line
      // counters. The first_lineno increment is quite a hack, and makes it so
      // that this ent is on the wrong line but it doesn't mess up the rest of
      // the file.
      ++yyextra->lineno;
      ++yyextra->first_lineno;
    }
    pop_state();
    yytext[0] = ' ';
    yytext[1] = 0;
    tok(T_XHP_TEXT);
  }
	YY_BREAK
case 443:
YY_RULE_SETUP
#line 918 "scanner.l"
{
    pop_state();
    yyless(0);
  }
	YY_BREAK


case 444:
/* rule 444 can match eol */
YY_RULE_SETUP
#line 925 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    // Crunch white space at the end
    char* ii = yytext + yyleng - 1;
    while (*ii == ' ' || *ii == '\t' || *ii == '\n' || *ii == '\r') {
      --ii;
    }
   if (ii != yytext + yyleng - 1) {
      ii[1] = ' ';
      ii[2] = 0;
    }
    tok(T_XHP_TEXT);
  }
	YY_BREAK
case 445:
/* rule 445 can match eol */
YY_RULE_SETUP
#line 938 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    yytext[0] = ' ';
    yytext[1] = 0;
    tok(T_XHP_TEXT);
  }
	YY_BREAK
case 446:
/* rule 446 can match eol */
YY_RULE_SETUP
#line 944 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok('{');
  }
	YY_BREAK
case 447:
/* rule 447 can match eol */
YY_RULE_SETUP
#line 948 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok('<');
  }
	YY_BREAK
case 448:
/* rule 448 can match eol */
YY_RULE_SETUP
#line 952 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_XHP_LT_DIV);
  }
	YY_BREAK
case 449:
/* rule 449 can match eol */
YY_RULE_SETUP
#line 956 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_XHP_LT_DIV_GT);
  }
	YY_BREAK

case 450:
/* rule 450 can match eol */
YY_RULE_SETUP
#line 962 "scanner.l"
{
  push_state(XHP_COMMENT);
  yymore();
}
	YY_BREAK
case 451:
/* rule 451 can match eol */
YY_RULE_SETUP
#line 967 "scanner.l"
{
  yymore();
}
	YY_BREAK
case 452:
/* rule 452 can match eol */
YY_RULE_SETUP
#line 971 "scanner.l"
{
  pop_state();
}
	YY_BREAK
case 453:
YY_RULE_SETUP
#line 975 "scanner.l"
{
  yymore();
}
	YY_BREAK

case 454:
YY_RULE_SETUP
#line 980 "scanner.l"
tok(T_XHP_ANY);
	YY_BREAK
case 455:
YY_RULE_SETUP
#line 981 "scanner.l"
tok(T_XHP_PCDATA);
	YY_BREAK
case 456:
YY_RULE_SETUP
#line 982 "scanner.l"
tok(T_XHP_EMPTY);
	YY_BREAK
case 457:
YY_RULE_SETUP
#line 983 "scanner.l"
tok(T_STRING);
	YY_BREAK
case 458:
YY_RULE_SETUP
#line 984 "scanner.l"
{
    pop_state();
    tok(';');
  }
	YY_BREAK
case 459:
YY_RULE_SETUP
#line 988 "scanner.l"
{
    tok(T_XHP_COLON);
  }
	YY_BREAK

/* Other */
case 460:
/* rule 460 can match eol */
YY_RULE_SETUP
#line 994 "scanner.l"
{
  tok(yytext[0]);
  // fix unused function warnings
  yy_top_state(NULL);
  yyunput(0, 0, NULL);
}
	YY_BREAK
case 461:
YY_RULE_SETUP
#line 1001 "scanner.l"
YY_FATAL_ERROR( "flex scanner jammed" );
	YY_BREAK
#line 9689 "scanner.lex.cpp"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(PHP):
case YY_STATE_EOF(PHP_COMMENT):
case YY_STATE_EOF(PHP_EOL_COMMENT):
case YY_STATE_EOF(PHP_DOC_COMMENT):
case YY_STATE_EOF(PHP_HEREDOC_START):
case YY_STATE_EOF(PHP_HEREDOC_NSTART):
case YY_STATE_EOF(PHP_HEREDOC_NEWLINE):
case YY_STATE_EOF(PHP_HEREDOC_DATA):
case YY_STATE_EOF(PHP_NO_RESERVED_WORDS):
case YY_STATE_EOF(PHP_NO_RESERVED_WORDS_PERSIST):
case YY_STATE_EOF(XHP_LABEL):
case YY_STATE_EOF(XHP_LABEL_WHITESPACE):
case YY_STATE_EOF(XHP_ATTRS):
case YY_STATE_EOF(XHP_ATTR_VAL):
case YY_STATE_EOF(XHP_AFTER_ENT):
case YY_STATE_EOF(XHP_CHILD):
case YY_STATE_EOF(XHP_CHILD_START):
case YY_STATE_EOF(XHP_INVALID_ENTITY):
case YY_STATE_EOF(XHP_ATTR_TYPE_DECL):
case YY_STATE_EOF(XHP_CHILDREN_DECL):
case YY_STATE_EOF(XHP_COMMENT):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yyg->yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yyg->yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * xhplex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yyg->yy_c_buf_p = yyg->yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state( yyscanner );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state , yyscanner);

			yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yyg->yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = yyg->yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer( yyscanner ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yyg->yy_did_buffer_switch_on_eof = 0;

				if ( xhpwrap(yyscanner ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yyg->yy_c_buf_p = yyg->yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yyg->yy_c_buf_p =
					yyg->yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yyg->yy_c_buf_p =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars];

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of xhplex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
static int yy_get_next_buffer (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = yyg->yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yyg->yy_c_buf_p - yyg->yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) (yyg->yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					xhprealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2 ,yyscanner );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yyg->yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			yyg->yy_n_chars, (size_t) num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	if ( yyg->yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			xhprestart(yyin  ,yyscanner);
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) (yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) xhprealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size ,yyscanner );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	yyg->yy_n_chars += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yyg->yytext_ptr = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = yyg->yy_start;

	for ( yy_cp = yyg->yytext_ptr + YY_MORE_ADJ; yy_cp < yyg->yy_c_buf_p; ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		if ( yy_accept[yy_current_state] )
			{
			yyg->yy_last_accepting_state = yy_current_state;
			yyg->yy_last_accepting_cpos = yy_cp;
			}
		if ( *yy_cp )
			{
			register YY_CHAR yy_c = YY_SC_TO_UI(*yy_cp);
			if ( yy_accept[yy_current_state] )
				{
				yyg->yy_last_accepting_state = yy_current_state;
				yyg->yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			}
		else
			yy_current_state = yy_NUL_trans[yy_current_state];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	register int yy_is_jam;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner; /* This var may be unused depending upon options. */
/* %% [17.0] code to find the next state, and perhaps do backing up, goes here */

	yy_current_state = yy_NUL_trans[yy_current_state];
	yy_is_jam = (yy_current_state == 0);

	return yy_is_jam ? 0 : yy_current_state;
}

/* %if-c-only */

    static void yyunput (int c, register char * yy_bp , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	register char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    yy_cp = yyg->yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yyg->yy_hold_char;

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yyg->yy_n_chars + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

	yyg->yytext_ptr = yy_bp;
	yyg->yy_hold_char = *yy_cp;
	yyg->yy_c_buf_p = yy_cp;
}
/* %if-c-only */

/* %endif */

/* %if-c-only */
#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (yyscan_t yyscanner)
#else
    static int input  (yyscan_t yyscanner)
#endif

/* %endif */
/* %if-c++-only */
/* %endif */
{
	int c;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	*yyg->yy_c_buf_p = yyg->yy_hold_char;

	if ( *yyg->yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yyg->yy_c_buf_p < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			/* This was really a NUL. */
			*yyg->yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yyg->yy_c_buf_p - yyg->yytext_ptr;
			++yyg->yy_c_buf_p;

			switch ( yy_get_next_buffer( yyscanner ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					xhprestart(yyin ,yyscanner);

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( xhpwrap(yyscanner ) )
						return EOF;

					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput(yyscanner);
#else
					return input(yyscanner);
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yyg->yy_c_buf_p = yyg->yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yyg->yy_c_buf_p;	/* cast for 8-bit char's */
	*yyg->yy_c_buf_p = '\0';	/* preserve yytext */
	yyg->yy_hold_char = *++yyg->yy_c_buf_p;

/* %% [19.0] update BOL and yylineno */

	return c;
}
/* %if-c-only */
#endif	/* ifndef YY_NO_INPUT */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * @param yyscanner The scanner object.
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
    void xhprestart  (FILE * input_file , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! YY_CURRENT_BUFFER ){
        xhpensure_buffer_stack (yyscanner);
		YY_CURRENT_BUFFER_LVALUE =
            xhp_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
	}

	xhp_init_buffer(YY_CURRENT_BUFFER,input_file ,yyscanner);
	xhp_load_buffer_state(yyscanner );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * @param yyscanner The scanner object.
 */
/* %if-c-only */
    void xhp_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	/* TODO. We should be able to replace this entire function body
	 * with
	 *		xhppop_buffer_state();
	 *		xhppush_buffer_state(new_buffer);
     */
	xhpensure_buffer_stack (yyscanner);
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	xhp_load_buffer_state(yyscanner );

	/* We don't actually know whether we did this switch during
	 * EOF (xhpwrap()) processing, but the only time this flag
	 * is looked at is after xhpwrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yyg->yy_did_buffer_switch_on_eof = 1;
}

/* %if-c-only */
static void xhp_load_buffer_state  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	yyg->yytext_ptr = yyg->yy_c_buf_p = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	yyg->yy_hold_char = *yyg->yy_c_buf_p;
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * @param yyscanner The scanner object.
 * @return the allocated buffer state.
 */
/* %if-c-only */
    YY_BUFFER_STATE xhp_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) xhpalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in xhp_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) xhpalloc(b->yy_buf_size + 2 ,yyscanner );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in xhp_create_buffer()" );

	b->yy_is_our_buffer = 1;

	xhp_init_buffer(b,file ,yyscanner);

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with xhp_create_buffer()
 * @param yyscanner The scanner object.
 */
/* %if-c-only */
    void xhp_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		xhpfree((void *) b->yy_ch_buf ,yyscanner );

	xhpfree((void *) b ,yyscanner );
}

/* %if-c-only */

#ifndef __cplusplus
extern int isatty (int );
#endif /* __cplusplus */
    
/* %endif */

/* %if-c++-only */
/* %endif */

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a xhprestart() or at EOF.
 */
/* %if-c-only */
    static void xhp_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */

{
	int oerrno = errno;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	xhp_flush_buffer(b ,yyscanner);

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then xhp_init_buffer was _probably_
     * called from xhprestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */

        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
    
/* %endif */
/* %if-c++-only */
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * @param yyscanner The scanner object.
 */
/* %if-c-only */
    void xhp_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		xhp_load_buffer_state(yyscanner );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  @param yyscanner The scanner object.
 */
/* %if-c-only */
void xhppush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (new_buffer == NULL)
		return;

	xhpensure_buffer_stack(yyscanner);

	/* This block is copied from xhp_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		yyg->yy_buffer_stack_top++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from xhp_switch_to_buffer. */
	xhp_load_buffer_state(yyscanner );
	yyg->yy_did_buffer_switch_on_eof = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  @param yyscanner The scanner object.
 */
/* %if-c-only */
void xhppop_buffer_state (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (!YY_CURRENT_BUFFER)
		return;

	xhp_delete_buffer(YY_CURRENT_BUFFER ,yyscanner);
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if (yyg->yy_buffer_stack_top > 0)
		--yyg->yy_buffer_stack_top;

	if (YY_CURRENT_BUFFER) {
		xhp_load_buffer_state(yyscanner );
		yyg->yy_did_buffer_switch_on_eof = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
static void xhpensure_buffer_stack (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	int num_to_alloc;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if (!yyg->yy_buffer_stack) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)xhpalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in xhpensure_buffer_stack()" );
								  
		memset(yyg->yy_buffer_stack, 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		yyg->yy_buffer_stack_max = num_to_alloc;
		yyg->yy_buffer_stack_top = 0;
		return;
	}

	if (yyg->yy_buffer_stack_top >= (yyg->yy_buffer_stack_max) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = yyg->yy_buffer_stack_max + grow_size;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)xhprealloc
								(yyg->yy_buffer_stack,
								num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in xhpensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset(yyg->yy_buffer_stack + yyg->yy_buffer_stack_max, 0, grow_size * sizeof(struct yy_buffer_state*));
		yyg->yy_buffer_stack_max = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object. 
 */
YY_BUFFER_STATE xhp_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) xhpalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in xhp_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	xhp_switch_to_buffer(b ,yyscanner );

	return b;
}
/* %endif */

/* %if-c-only */
/** Setup the input buffer state to scan a string. The next call to xhplex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       xhp_scan_bytes() instead.
 */
YY_BUFFER_STATE xhp_scan_string (yyconst char * yystr , yyscan_t yyscanner)
{
    
	return xhp_scan_bytes(yystr,strlen(yystr) ,yyscanner);
}
/* %endif */

/* %if-c-only */
/** Setup the input buffer state to scan the given bytes. The next call to xhplex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE xhp_scan_bytes  (yyconst char * yybytes, int  _yybytes_len , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = _yybytes_len + 2;
	buf = (char *) xhpalloc(n ,yyscanner );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in xhp_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = xhp_scan_buffer(buf,n ,yyscanner);
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in xhp_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}
/* %endif */

/* %if-c-only */
    static void yy_push_state (int  new_state , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( yyg->yy_start_stack_ptr >= yyg->yy_start_stack_depth )
		{
		yy_size_t new_size;

		yyg->yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yyg->yy_start_stack_depth * sizeof( int );

		if ( ! yyg->yy_start_stack )
			yyg->yy_start_stack = (int *) xhpalloc(new_size ,yyscanner );

		else
			yyg->yy_start_stack = (int *) xhprealloc((void *) yyg->yy_start_stack,new_size ,yyscanner );

		if ( ! yyg->yy_start_stack )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	yyg->yy_start_stack[yyg->yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
}

/* %if-c-only */
    static void yy_pop_state  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( --yyg->yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yyg->yy_start_stack[yyg->yy_start_stack_ptr]);
}

/* %if-c-only */
    static int yy_top_state  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	return yyg->yy_start_stack[yyg->yy_start_stack_ptr - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
static void yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)
{
    	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}
/* %endif */
/* %if-c++-only */
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = yyg->yy_hold_char; \
		yyg->yy_c_buf_p = yytext + yyless_macro_arg; \
		yyg->yy_hold_char = *yyg->yy_c_buf_p; \
		*yyg->yy_c_buf_p = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */

/** Get the user-defined data for this scanner.
 * @param yyscanner The scanner object.
 */
YY_EXTRA_TYPE xhpget_extra  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyextra;
}

/* %endif */

/** Get the current line number.
 * @param yyscanner The scanner object.
 */
int xhpget_lineno  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    
        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yylineno;
}

/** Get the current column number.
 * @param yyscanner The scanner object.
 */
int xhpget_column  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    
        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yycolumn;
}

/** Get the input stream.
 * @param yyscanner The scanner object.
 */
FILE *xhpget_in  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyin;
}

/** Get the output stream.
 * @param yyscanner The scanner object.
 */
FILE *xhpget_out  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyout;
}

/** Get the length of the current token.
 * @param yyscanner The scanner object.
 */
int xhpget_leng  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyleng;
}

/** Get the current token.
 * @param yyscanner The scanner object.
 */

char *xhpget_text  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yytext;
}

/* %if-reentrant */

/** Set the user-defined data. This data is never touched by the scanner.
 * @param user_defined The data to be associated with this scanner.
 * @param yyscanner The scanner object.
 */
void xhpset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyextra = user_defined ;
}

/* %endif */

/** Set the current line number.
 * @param line_number
 * @param yyscanner The scanner object.
 */
void xhpset_lineno (int  line_number , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* lineno is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           yy_fatal_error( "xhpset_lineno called with no buffer" , yyscanner); 
    
    yylineno = line_number;
}

/** Set the current column.
 * @param line_number
 * @param yyscanner The scanner object.
 */
void xhpset_column (int  column_no , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* column is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           yy_fatal_error( "xhpset_column called with no buffer" , yyscanner); 
    
    yycolumn = column_no;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param in_str A readable stream.
 * @param yyscanner The scanner object.
 * @see xhp_switch_to_buffer
 */
void xhpset_in (FILE *  in_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyin = in_str ;
}

void xhpset_out (FILE *  out_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyout = out_str ;
}

int xhpget_debug  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yy_flex_debug;
}

void xhpset_debug (int  bdebug , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yy_flex_debug = bdebug ;
}

/* %endif */

/* %if-reentrant */
/* Accessor methods for yylval and yylloc */

/* %if-bison-bridge */

YYSTYPE * xhpget_lval  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yylval;
}

void xhpset_lval (YYSTYPE *  yylval_param , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yylval = yylval_param;
}

/* %endif */

/* User-visible API */

/* xhplex_init is special because it creates the scanner itself, so it is
 * the ONLY reentrant function that doesn't take the scanner as the last argument.
 * That's why we explicitly handle the declaration, instead of using our macros.
 */

int xhplex_init(yyscan_t* ptr_yy_globals)

{
    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) xhpalloc ( sizeof( struct yyguts_t ), NULL );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    return yy_init_globals ( *ptr_yy_globals );
}

/* xhplex_init_extra has the same functionality as xhplex_init, but follows the
 * convention of taking the scanner as the last argument. Note however, that
 * this is a *pointer* to a scanner, as it will be allocated by this call (and
 * is the reason, too, why this function also must handle its own declaration).
 * The user defined value in the first argument will be available to xhpalloc in
 * the yyextra field.
 */

int xhplex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )

{
    struct yyguts_t dummy_yyguts;

    xhpset_extra (yy_user_defined, &dummy_yyguts);

    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }
	
    *ptr_yy_globals = (yyscan_t) xhpalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );
	
    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }
    
    /* By setting to 0xAA, we expose bugs in
    yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));
    
    xhpset_extra (yy_user_defined, *ptr_yy_globals);
    
    return yy_init_globals ( *ptr_yy_globals );
}

/* %endif if-c-only */

/* %if-c-only */
static int yy_init_globals (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from xhplex_destroy(), so don't allocate here.
     */

    yyg->yy_buffer_stack = 0;
    yyg->yy_buffer_stack_top = 0;
    yyg->yy_buffer_stack_max = 0;
    yyg->yy_c_buf_p = (char *) 0;
    yyg->yy_init = 0;
    yyg->yy_start = 0;

    yyg->yy_start_stack_ptr = 0;
    yyg->yy_start_stack_depth = 0;
    yyg->yy_start_stack =  NULL;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = (FILE *) 0;
    yyout = (FILE *) 0;
#endif

    /* For future reference: Set errno on error, since we are called by
     * xhplex_init()
     */
    return 0;
}
/* %endif */

/* %if-c-only SNIP! this currently causes conflicts with the c++ scanner */
/* xhplex_destroy is for both reentrant and non-reentrant scanners. */
int xhplex_destroy  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		xhp_delete_buffer(YY_CURRENT_BUFFER ,yyscanner );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		xhppop_buffer_state(yyscanner);
	}

	/* Destroy the stack itself. */
	xhpfree(yyg->yy_buffer_stack ,yyscanner);
	yyg->yy_buffer_stack = NULL;

    /* Destroy the start condition stack. */
        xhpfree(yyg->yy_start_stack ,yyscanner );
        yyg->yy_start_stack = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * xhplex() is called, initialization will occur. */
    yy_init_globals( yyscanner);

/* %if-reentrant */
    /* Destroy the main struct (reentrant only). */
    xhpfree ( yyscanner , yyscanner );
    yyscanner = NULL;
/* %endif */
    return 0;
}
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n , yyscan_t yyscanner)
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s , yyscan_t yyscanner)
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *xhpalloc (yy_size_t  size , yyscan_t yyscanner)
{
	return (void *) malloc( size );
}

void *xhprealloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void xhpfree (void * ptr , yyscan_t yyscanner)
{
	free( (char *) ptr );	/* see xhprealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 1001 "scanner.l"



#ifdef DEBUG
static const char* yy_state_name(int state) {
  switch (state) {
    case INITIAL:
      return "INITIAL";
    case PHP:
      return "PHP";
    case PHP_COMMENT:
      return "PHP_COMMENT";
    case PHP_EOL_COMMENT:
      return "PHP_EOL_COMMENT";
    case PHP_DOC_COMMENT:
      return "PHP_DOC_COMMENT";
    case PHP_HEREDOC_START:
      return "PHP_HEREDOC_START";
    case PHP_HEREDOC_NSTART:
      return "PHP_HEREDOC_NSTART";
    case PHP_HEREDOC_NEWLINE:
      return "PHP_HEREDOC_NEWLINE";
    case PHP_HEREDOC_DATA:
      return "PHP_HEREDOC_DATA";
    case PHP_NO_RESERVED_WORDS:
      return "PHP_NO_RESERVED_WORDS";
    case PHP_NO_RESERVED_WORDS_PERSIST:
      return "PHP_NO_RESERVED_WORDS_PERSIST";
    case XHP_LABEL:
      return "XHP_LABEL";
    case XHP_LABEL_WHITESPACE:
      return "XHP_LABEL_WHITESPACE";
    case XHP_ATTRS:
      return "XHP_ATTRS";
    case XHP_ATTR_VAL:
      return "XHP_ATTR_VAL";
    case XHP_AFTER_ENT:
      return "XHP_AFTER_ENT";
    case XHP_CHILD:
      return "XHP_CHILD";
    case XHP_CHILD_START:
      return "XHP_CHILD_START";
    case XHP_INVALID_ENTITY:
      return "XHP_INVALID_ENTITY";
    case XHP_ATTR_TYPE_DECL:
      return "XHP_ATTR_TYPE_DECL";
    case XHP_CHILDREN_DECL:
      return "XHP_CHILDREN_DECL";
    case XHP_COMMENT:
      return "XHP_COMMENT";
    default:
      return "???";
  }
}

static void yy_log_token(int tok) {
  const char* tokname = yytokname(tok);
  if (tokname) {
    fprintf(stderr, "--> %s\n", tokname);
  } else {
    fprintf(stderr, "--> '%c'\n", tok);
  }
}
#endif

static int yy_token(int tok, yyguts_t* yyg) {
  if (YY_START == PHP_NO_RESERVED_WORDS) {
    pop_state();
  }

  switch (tok) {
    case T_OPEN_TAG:
    case T_OPEN_TAG_WITH_ECHO:
    case T_OPEN_TAG_FAKE:
      push_state(PHP);
      break;

    case T_CLOSE_TAG:
      pop_state();
      return ';';

    // In PHP it's ok to use keywords such as 'if' as field names
    // or function names.
    case T_OBJECT_OPERATOR:
    case T_PAAMAYIM_NEKUDOTAYIM:
    case T_FUNCTION:
      push_state(PHP_NO_RESERVED_WORDS);
      break;

    case '{':
      // not used anymore
      yyextra->curly_stack.push(tok);
      break;
  }
#ifdef DEBUG
  yy_log_token(tok);
#endif
  return yyextra->last_token = tok;
}

static inline void yy_scan_newlines(const char* text, struct yyguts_t* yyg) {
  for (; *text; ++text) {
    if (*text == '\r') {
      if (text[1] == '\n') {
        ++text;
      }
      ++yyextra->lineno;
    } else if (*text == '\n') {
      ++yyextra->lineno;
    }
  }
}

void xhp_new_push_state(int s, struct yyguts_t* yyg) {
#ifdef DEBUG
  fprintf(stderr, "--> PUSH(%s -> %s)\n", yy_state_name(YY_START), yy_state_name(s));
#endif
  yy_push_state(s, yyg);
}

void xhp_new_pop_state(struct yyguts_t* yyg) {
#ifdef DEBUG
  int s = YY_START;
#endif
  yy_pop_state(yyg);
#ifdef DEBUG
  fprintf(stderr, "--> POP(%s -> %s)\n", yy_state_name(s), yy_state_name(YY_START));
#endif
}

void xhp_set_state(int s, struct yyguts_t* yyg) {
#ifdef DEBUG
  fprintf(stderr, "--> SET(%s)\n", yy_state_name(s));
#endif
  BEGIN(s);
}
